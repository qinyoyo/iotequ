<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.iotequ.svasclient.db.dao.SvasVeinInfoDao">
  <resultMap id="BaseResultMap" type="top.iotequ.svasclient.db.pojo.SvasVeinInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_no" jdbcType="VARCHAR" property="userNo" />
    <result column="finger_no" jdbcType="TINYINT" property="fingerNo" />
    <result column="templates" jdbcType="VARCHAR" property="templates" />
    <result column="warning" jdbcType="INTEGER" property="warning" />
    <result column="finger_name" jdbcType="VARCHAR" property="fingerName" />
  </resultMap>
  <sql id = "selectSql">
     SELECT id,user_no,finger_no,templates,warning,finger_name FROM dev_vein_info
  </sql>
  <insert id="insert" parameterType="top.iotequ.svasclient.db.pojo.SvasVeinInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" databaseId="SQLServer">
      SELECT @@IDENTITY
    </selectKey>
    insert into dev_vein_info (user_no,finger_no,templates,warning,finger_name)
      values 
      (#{userNo,jdbcType=VARCHAR},#{fingerNo,jdbcType=TINYINT},#{templates,jdbcType=VARCHAR},#{warning,jdbcType=INTEGER},#{fingerName,jdbcType=VARCHAR})
  </insert>
  <insert id="insert" parameterType="top.iotequ.svasclient.db.pojo.SvasVeinInfo" databaseId="Oracle">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer" >
      SELECT SEQUENCE_DEV_VEIN_INFO.nextval from DUAL
    </selectKey>
    insert into dev_vein_info (id,user_no,finger_no,templates,warning,finger_name)
      values 
      (#{id,jdbcType=INTEGER},#{userNo,jdbcType=VARCHAR},#{fingerNo,jdbcType=TINYINT},#{templates,jdbcType=VARCHAR},#{warning,jdbcType=INTEGER},#{fingerName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.svasclient.db.pojo.SvasVeinInfo">
    insert into dev_vein_info (user_no,finger_no,templates,warning,finger_name)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.userNo,jdbcType=VARCHAR},#{item.fingerNo,jdbcType=TINYINT},#{item.templates,jdbcType=VARCHAR},#{item.warning,jdbcType=INTEGER},#{item.fingerName,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.svasclient.db.pojo.SvasVeinInfo" databaseId="Oracle">
     insert into dev_vein_info (id,user_no,finger_no,templates,warning,finger_name)
       select SEQUENCE_DEV_VEIN_INFO.nextval,cd.* from(
          <foreach collection="list" item="item" index="index" separator="union all">
             select #{item.userNo,jdbcType=VARCHAR},#{item.fingerNo,jdbcType=TINYINT},#{item.templates,jdbcType=VARCHAR},#{item.warning,jdbcType=INTEGER},#{item.fingerName,jdbcType=VARCHAR} from dual
          </foreach>
       ) cd
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.svasclient.db.pojo.SvasVeinInfo">
    insert into dev_vein_info (id,user_no,finger_no,templates,warning,finger_name)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.userNo,jdbcType=VARCHAR},#{item.fingerNo,jdbcType=TINYINT},#{item.templates,jdbcType=VARCHAR},#{item.warning,jdbcType=INTEGER},#{item.fingerName,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.svasclient.db.pojo.SvasVeinInfo" databaseId="SQLServer">
    set IDENTITY_INSERT dev_vein_info ON 
    insert into dev_vein_info (id,user_no,finger_no,templates,warning,finger_name)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.userNo,jdbcType=VARCHAR},#{item.fingerNo,jdbcType=TINYINT},#{item.templates,jdbcType=VARCHAR},#{item.warning,jdbcType=INTEGER},#{item.fingerName,jdbcType=VARCHAR})
    </foreach>
    set IDENTITY_INSERT dev_vein_info OFF 
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.svasclient.db.pojo.SvasVeinInfo" databaseId="Oracle">
    insert all 
    <foreach collection="list" item="item" index="index">
      into dev_vein_info (id,user_no,finger_no,templates,warning,finger_name) values(#{item.id,jdbcType=INTEGER},#{item.userNo,jdbcType=VARCHAR},#{item.fingerNo,jdbcType=TINYINT},#{item.templates,jdbcType=VARCHAR},#{item.warning,jdbcType=INTEGER},#{item.fingerName,jdbcType=VARCHAR})
    </foreach>
    select 1 from dual
  </insert>
  <select id="select" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <include refid="selectSql" /> where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from dev_vein_info where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBatch" parameterType="java.lang.String">
    delete from dev_vein_info where id in (${_parameter})
  </delete>
  <select id="selectByUserNo" parameterType="java.lang.String" resultMap="BaseResultMap">
    <include refid="selectSql" /> where user_no = #{userNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByUserNo" parameterType="java.lang.String">
    delete from dev_vein_info where user_no = #{userNo,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteBatchByUserNo" parameterType="java.lang.String">
    delete from dev_vein_info where user_no in     <foreach item="item" index="index" collection="_parameter.split(',')" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <delete id="deleteList" parameterType="java.util.List">
    delete from dev_vein_info where id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
       #{item.id,jdbcType=INTEGER}
    </foreach>
  </delete>
  <update id="update" parameterType="top.iotequ.svasclient.db.pojo.SvasVeinInfo">
    update dev_vein_info set 
      user_no = #{userNo,jdbcType=VARCHAR},
      finger_no = #{fingerNo,jdbcType=TINYINT},
      templates = #{templates,jdbcType=VARCHAR},
      warning = #{warning,jdbcType=INTEGER},
      finger_name = #{fingerName,jdbcType=VARCHAR}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateSelective" parameterType="top.iotequ.svasclient.db.pojo.SvasVeinInfo">
    update dev_vein_info 
      <set>
        <if test="userNo != null"> user_no = #{userNo,jdbcType=VARCHAR},</if>
        <if test="fingerNo != null"> finger_no = #{fingerNo,jdbcType=TINYINT},</if>
        <if test="templates != null"> templates = #{templates,jdbcType=VARCHAR},</if>
        <if test="warning != null"> warning = #{warning,jdbcType=INTEGER},</if>
        <if test="fingerName != null"> finger_name = #{fingerName,jdbcType=VARCHAR},</if>
      </set>
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBy" parameterType="top.iotequ.svasclient.db.pojo.SvasVeinInfo">
    update dev_vein_info set 
      id = #{record.id,jdbcType=INTEGER},
      user_no = #{record.userNo,jdbcType=VARCHAR},
      finger_no = #{record.fingerNo,jdbcType=TINYINT},
      templates = #{record.templates,jdbcType=VARCHAR},
      warning = #{record.warning,jdbcType=INTEGER},
      finger_name = #{record.fingerName,jdbcType=VARCHAR}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="list" parameterType="top.iotequ.svasclient.db.pojo.SvasVeinInfo" resultMap="BaseResultMap">
    <include refid="selectSql" />
     where 1=1 
        <if test="id != null"> and id = #{id,jdbcType=INTEGER} </if>
        <if test="userNo != null"> and user_no like #{userNo,jdbcType=VARCHAR} </if>
        <if test="fingerNo != null"> and finger_no = #{fingerNo,jdbcType=TINYINT} </if>
        <if test="templates != null"> and templates like #{templates,jdbcType=VARCHAR} </if>
        <if test="warning != null"> and warning = #{warning,jdbcType=INTEGER} </if>
        <if test="fingerName != null"> and finger_name = #{fingerName,jdbcType=VARCHAR} </if>
  </select>
  <select id="listBy" parameterType="map" resultMap="BaseResultMap">
    <include refid="selectSql" />
        <if test="whereString != null and whereString !=''"> where ${whereString} </if>
        <if test="orderString != null and orderString!=''"> order by ${orderString} </if>
  </select>
  <select id="query" parameterType="map" resultMap="BaseResultMap">
        ${sqlString}
  </select>
</mapper>
