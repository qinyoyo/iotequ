<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.iotequ.svasclient.db.dao.SvasUserNoDao">
  <resultMap id="BaseResultMap" type="top.iotequ.svasclient.db.pojo.SvasUserNo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_no" jdbcType="VARCHAR" property="userNo" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birth_date" jdbcType="DATE" property="birthDate" />
    <result column="mobile_phone" jdbcType="VARCHAR" property="mobilePhone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="wechat_openid" jdbcType="VARCHAR" property="wechatOpenid" />
    <result column="id_type" jdbcType="INTEGER" property="idType" />
    <result column="id_no" jdbcType="VARCHAR" property="idNo" />
    <result column="id_nation" jdbcType="VARCHAR" property="idNation" />
    <result column="id_organization" jdbcType="VARCHAR" property="idOrganization" />
    <result column="home_addr" jdbcType="VARCHAR" property="homeAddr" />
    <result column="valid_date" jdbcType="DATE" property="validDate" />
    <result column="expired_date" jdbcType="DATE" property="expiredDate" />
    <result column="reg_time" jdbcType="TIMESTAMP" property="regTime" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
  </resultMap>
  <sql id = "selectSql">
     SELECT id,user_no,name,sex,birth_date,mobile_phone,email,wechat_openid,id_type,id_no,id_nation,id_organization,home_addr,valid_date,expired_date,reg_time,photo FROM dev_user_no
  </sql>
  <insert id="insert" parameterType="top.iotequ.svasclient.db.pojo.SvasUserNo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" databaseId="SQLServer">
      SELECT @@IDENTITY
    </selectKey>
    insert into dev_user_no (user_no,name,sex,birth_date,mobile_phone,email,wechat_openid,id_type,id_no,id_nation,id_organization,home_addr,valid_date,expired_date,reg_time,photo)
    values
    (#{userNo,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{sex,jdbcType=VARCHAR},#{birthDate,jdbcType=DATE},#{mobilePhone,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},#{wechatOpenid,jdbcType=VARCHAR},#{idType,jdbcType=INTEGER},#{idNo,jdbcType=VARCHAR},#{idNation,jdbcType=VARCHAR},#{idOrganization,jdbcType=VARCHAR},#{homeAddr,jdbcType=VARCHAR},#{validDate,jdbcType=DATE},#{expiredDate,jdbcType=DATE},#{regTime,jdbcType=TIMESTAMP},#{photo,jdbcType=VARCHAR})
  </insert>
  <insert id="insert" parameterType="top.iotequ.svasclient.db.pojo.SvasUserNo" databaseId="Oracle">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer" >
      SELECT SEQUENCE_DEV_USER_NO.nextval from DUAL
    </selectKey>
    insert into dev_user_no (id,user_no,name,sex,birth_date,mobile_phone,email,wechat_openid,id_type,id_no,id_nation,id_organization,home_addr,valid_date,expired_date,reg_time,photo)
    values
    (#{id,jdbcType=INTEGER},#{userNo,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{sex,jdbcType=VARCHAR},#{birthDate,jdbcType=DATE},#{mobilePhone,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},#{wechatOpenid,jdbcType=VARCHAR},#{idType,jdbcType=INTEGER},#{idNo,jdbcType=VARCHAR},#{idNation,jdbcType=VARCHAR},#{idOrganization,jdbcType=VARCHAR},#{homeAddr,jdbcType=VARCHAR},#{validDate,jdbcType=DATE},#{expiredDate,jdbcType=DATE},#{regTime,jdbcType=TIMESTAMP},#{photo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.svasclient.db.pojo.SvasUserNo">
    insert into dev_user_no (user_no,name,sex,birth_date,mobile_phone,email,wechat_openid,id_type,id_no,id_nation,id_organization,home_addr,valid_date,expired_date,reg_time,photo)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.userNo,jdbcType=VARCHAR},#{item.name,jdbcType=VARCHAR},#{item.sex,jdbcType=VARCHAR},#{item.birthDate,jdbcType=DATE},#{item.mobilePhone,jdbcType=VARCHAR},#{item.email,jdbcType=VARCHAR},#{item.wechatOpenid,jdbcType=VARCHAR},#{item.idType,jdbcType=INTEGER},#{item.idNo,jdbcType=VARCHAR},#{item.idNation,jdbcType=VARCHAR},#{item.idOrganization,jdbcType=VARCHAR},#{item.homeAddr,jdbcType=VARCHAR},#{item.validDate,jdbcType=DATE},#{item.expiredDate,jdbcType=DATE},#{item.regTime,jdbcType=TIMESTAMP},#{item.photo,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.svasclient.db.pojo.SvasUserNo" databaseId="Oracle">
    insert into dev_user_no (id,user_no,name,sex,birth_date,mobile_phone,email,wechat_openid,id_type,id_no,id_nation,id_organization,home_addr,valid_date,expired_date,reg_time,photo)
    select SEQUENCE_DEV_USER_NO.nextval,cd.* from(
    <foreach collection="list" item="item" index="index" separator="union all">
      select #{item.userNo,jdbcType=VARCHAR},#{item.name,jdbcType=VARCHAR},#{item.sex,jdbcType=VARCHAR},#{item.birthDate,jdbcType=DATE},#{item.mobilePhone,jdbcType=VARCHAR},#{item.email,jdbcType=VARCHAR},#{item.wechatOpenid,jdbcType=VARCHAR},#{item.idType,jdbcType=INTEGER},#{item.idNo,jdbcType=VARCHAR},#{item.idNation,jdbcType=VARCHAR},#{item.idOrganization,jdbcType=VARCHAR},#{item.homeAddr,jdbcType=VARCHAR},#{item.validDate,jdbcType=DATE},#{item.expiredDate,jdbcType=DATE},#{item.regTime,jdbcType=TIMESTAMP},#{item.photo,jdbcType=VARCHAR} from dual
    </foreach>
    ) cd
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.svasclient.db.pojo.SvasUserNo">
    insert into dev_user_no (id,user_no,name,sex,birth_date,mobile_phone,email,wechat_openid,id_type,id_no,id_nation,id_organization,home_addr,valid_date,expired_date,reg_time,photo)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.userNo,jdbcType=VARCHAR},#{item.name,jdbcType=VARCHAR},#{item.sex,jdbcType=VARCHAR},#{item.birthDate,jdbcType=DATE},#{item.mobilePhone,jdbcType=VARCHAR},#{item.email,jdbcType=VARCHAR},#{item.wechatOpenid,jdbcType=VARCHAR},#{item.idType,jdbcType=INTEGER},#{item.idNo,jdbcType=VARCHAR},#{item.idNation,jdbcType=VARCHAR},#{item.idOrganization,jdbcType=VARCHAR},#{item.homeAddr,jdbcType=VARCHAR},#{item.validDate,jdbcType=DATE},#{item.expiredDate,jdbcType=DATE},#{item.regTime,jdbcType=TIMESTAMP},#{item.photo,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.svasclient.db.pojo.SvasUserNo" databaseId="SQLServer">
    set IDENTITY_INSERT dev_user_no ON
    insert into dev_user_no (id,user_no,name,sex,birth_date,mobile_phone,email,wechat_openid,id_type,id_no,id_nation,id_organization,home_addr,valid_date,expired_date,reg_time,photo)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.userNo,jdbcType=VARCHAR},#{item.name,jdbcType=VARCHAR},#{item.sex,jdbcType=VARCHAR},#{item.birthDate,jdbcType=DATE},#{item.mobilePhone,jdbcType=VARCHAR},#{item.email,jdbcType=VARCHAR},#{item.wechatOpenid,jdbcType=VARCHAR},#{item.idType,jdbcType=INTEGER},#{item.idNo,jdbcType=VARCHAR},#{item.idNation,jdbcType=VARCHAR},#{item.idOrganization,jdbcType=VARCHAR},#{item.homeAddr,jdbcType=VARCHAR},#{item.validDate,jdbcType=DATE},#{item.expiredDate,jdbcType=DATE},#{item.regTime,jdbcType=TIMESTAMP},#{item.photo,jdbcType=VARCHAR})
    </foreach>
    set IDENTITY_INSERT dev_user_no OFF
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.svasclient.db.pojo.SvasUserNo" databaseId="Oracle">
    insert all
    <foreach collection="list" item="item" index="index">
      into dev_user_no (id,user_no,name,sex,birth_date,mobile_phone,email,wechat_openid,id_type,id_no,id_nation,id_organization,home_addr,valid_date,expired_date,reg_time,photo) values(#{item.id,jdbcType=INTEGER},#{item.userNo,jdbcType=VARCHAR},#{item.name,jdbcType=VARCHAR},#{item.sex,jdbcType=VARCHAR},#{item.birthDate,jdbcType=DATE},#{item.mobilePhone,jdbcType=VARCHAR},#{item.email,jdbcType=VARCHAR},#{item.wechatOpenid,jdbcType=VARCHAR},#{item.idType,jdbcType=INTEGER},#{item.idNo,jdbcType=VARCHAR},#{item.idNation,jdbcType=VARCHAR},#{item.idOrganization,jdbcType=VARCHAR},#{item.homeAddr,jdbcType=VARCHAR},#{item.validDate,jdbcType=DATE},#{item.expiredDate,jdbcType=DATE},#{item.regTime,jdbcType=TIMESTAMP},#{item.photo,jdbcType=VARCHAR})
    </foreach>
    select 1 from dual
  </insert>
  <select id="select" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <include refid="selectSql" /> where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from dev_user_no where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBatch" parameterType="java.lang.String">
    delete from dev_user_no where id in (${_parameter})
  </delete>
  <select id="selectByUserNo" parameterType="java.lang.String" resultMap="BaseResultMap">
    <include refid="selectSql" /> where user_no = #{userNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByUserNo" parameterType="java.lang.String">
    delete from dev_user_no where user_no = #{userNo,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteBatchByUserNo" parameterType="java.lang.String">
    delete from dev_user_no where user_no in     <foreach item="item" index="index" collection="_parameter.split(',')" open="(" separator="," close=")">
    #{item}
  </foreach>
  </delete>
  <select id="selectByIdType" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <include refid="selectSql" /> where id_type = #{idType,jdbcType=INTEGER}
  </select>
  <delete id="deleteByIdType" parameterType="java.lang.Integer">
    delete from dev_user_no where id_type = #{idType,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBatchByIdType" parameterType="java.lang.String">
    delete from dev_user_no where id_type in (${_parameter})
  </delete>
  <delete id="deleteList" parameterType="java.util.List">
    delete from dev_user_no where id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </delete>
  <update id="update" parameterType="top.iotequ.svasclient.db.pojo.SvasUserNo">
    update dev_user_no set 
      user_no = #{userNo,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birth_date = #{birthDate,jdbcType=DATE},
      mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      wechat_openid = #{wechatOpenid,jdbcType=VARCHAR},
      id_type = #{idType,jdbcType=INTEGER},
      id_no = #{idNo,jdbcType=VARCHAR},
      id_nation = #{idNation,jdbcType=VARCHAR},
      id_organization = #{idOrganization,jdbcType=VARCHAR},
      home_addr = #{homeAddr,jdbcType=VARCHAR},
      valid_date = #{validDate,jdbcType=DATE},
      expired_date = #{expiredDate,jdbcType=DATE},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      photo = #{photo,jdbcType=VARCHAR}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateSelective" parameterType="top.iotequ.svasclient.db.pojo.SvasUserNo">
    update dev_user_no
    <set>
      <if test="userNo != null"> user_no = #{userNo,jdbcType=VARCHAR},</if>
      <if test="name != null"> name = #{name,jdbcType=VARCHAR},</if>
      <if test="sex != null"> sex = #{sex,jdbcType=VARCHAR},</if>
      <if test="birthDate != null"> birth_date = #{birthDate,jdbcType=DATE},</if>
      <if test="mobilePhone != null"> mobile_phone = #{mobilePhone,jdbcType=VARCHAR},</if>
      <if test="email != null"> email = #{email,jdbcType=VARCHAR},</if>
      <if test="wechatOpenid != null"> wechat_openid = #{wechatOpenid,jdbcType=VARCHAR},</if>
      <if test="idType != null"> id_type = #{idType,jdbcType=INTEGER},</if>
      <if test="idNo != null"> id_no = #{idNo,jdbcType=VARCHAR},</if>
      <if test="idNation != null"> id_nation = #{idNation,jdbcType=VARCHAR},</if>
      <if test="idOrganization != null"> id_organization = #{idOrganization,jdbcType=VARCHAR},</if>
      <if test="homeAddr != null"> home_addr = #{homeAddr,jdbcType=VARCHAR},</if>
      <if test="validDate != null"> valid_date = #{validDate,jdbcType=DATE},</if>
      <if test="expiredDate != null"> expired_date = #{expiredDate,jdbcType=DATE},</if>
      <if test="regTime != null"> reg_time = #{regTime,jdbcType=TIMESTAMP},</if>
      <if test="photo != null"> photo = #{photo,jdbcType=VARCHAR},</if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBy" parameterType="top.iotequ.svasclient.db.pojo.SvasUserNo">
    update dev_user_no set 
      id = #{record.id,jdbcType=INTEGER},
      user_no = #{record.userNo,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      birth_date = #{record.birthDate,jdbcType=DATE},
      mobile_phone = #{record.mobilePhone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      wechat_openid = #{record.wechatOpenid,jdbcType=VARCHAR},
      id_type = #{record.idType,jdbcType=INTEGER},
      id_no = #{record.idNo,jdbcType=VARCHAR},
      id_nation = #{record.idNation,jdbcType=VARCHAR},
      id_organization = #{record.idOrganization,jdbcType=VARCHAR},
      home_addr = #{record.homeAddr,jdbcType=VARCHAR},
      valid_date = #{record.validDate,jdbcType=DATE},
      expired_date = #{record.expiredDate,jdbcType=DATE},
      reg_time = #{record.regTime,jdbcType=TIMESTAMP},
      photo = #{record.photo,jdbcType=VARCHAR}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="list" parameterType="top.iotequ.svasclient.db.pojo.SvasUserNo" resultMap="BaseResultMap">
    <include refid="selectSql" />
    where 1=1
    <if test="id != null"> and id = #{id,jdbcType=INTEGER} </if>
    <if test="userNo != null"> and user_no like #{userNo,jdbcType=VARCHAR} </if>
    <if test="name != null"> and name like #{name,jdbcType=VARCHAR} </if>
    <if test="sex != null"> and sex like #{sex,jdbcType=VARCHAR} </if>
    <if test="birthDate != null"> and birth_date like #{birthDate,jdbcType=DATE} </if>
    <if test="mobilePhone != null"> and mobile_phone like #{mobilePhone,jdbcType=VARCHAR} </if>
    <if test="email != null"> and email like #{email,jdbcType=VARCHAR} </if>
    <if test="wechatOpenid != null"> and wechat_openid like #{wechatOpenid,jdbcType=VARCHAR} </if>
    <if test="idType != null"> and id_type = #{idType,jdbcType=INTEGER} </if>
    <if test="idNo != null"> and id_no like #{idNo,jdbcType=VARCHAR} </if>
    <if test="idNation != null"> and id_nation like #{idNation,jdbcType=VARCHAR} </if>
    <if test="idOrganization != null"> and id_organization like #{idOrganization,jdbcType=VARCHAR} </if>
    <if test="homeAddr != null"> and home_addr like #{homeAddr,jdbcType=VARCHAR} </if>
    <if test="validDate != null"> and valid_date like #{validDate,jdbcType=DATE} </if>
    <if test="expiredDate != null"> and expired_date like #{expiredDate,jdbcType=DATE} </if>
    <if test="regTime != null"> and reg_time like #{regTime,jdbcType=TIMESTAMP} </if>
    <if test="photo != null"> and photo like #{photo,jdbcType=VARCHAR} </if>
  </select>
  <select id="listBy" parameterType="map" resultMap="BaseResultMap">
    <include refid="selectSql" />
    <if test="whereString != null and whereString !=''"> where ${whereString} </if>
    <if test="orderString != null and orderString!=''"> order by ${orderString} </if>
  </select>
  <select id="query" parameterType="map" resultMap="BaseResultMap">
        ${sqlString}
  </select>
</mapper>
