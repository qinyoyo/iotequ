<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.iotequ.reader.dao.DevReaderGroupDao">
  <resultMap id="BaseResultMap" type="top.iotequ.reader.pojo.DevReaderGroup">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="parent" jdbcType="INTEGER" property="parent" />
    <result column="org_code" jdbcType="INTEGER" property="orgCode" />
    <result column="org_auth" jdbcType="VARCHAR" property="orgAuth" />
    <result column="sub_org_auth" jdbcType="VARCHAR" property="subOrgAuth" />
    <result column="auth_group_list" jdbcType="VARCHAR" property="authGroupList" />
  </resultMap>
  <sql id = "selectSql">
     SELECT id,name,parent,org_code,org_auth,sub_org_auth,auth_group_list FROM dev_reader_group
  </sql>
  <resultMap id="TreeResultMap" type="top.iotequ.reader.pojo.DevReaderGroup">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="parent" jdbcType="INTEGER" property="parent" />
    <result column="org_code" jdbcType="INTEGER" property="orgCode" />
    <result column="org_auth" jdbcType="VARCHAR" property="orgAuth" />
    <result column="sub_org_auth" jdbcType="VARCHAR" property="subOrgAuth" />
    <result column="auth_group_list" jdbcType="VARCHAR" property="authGroupList" />
    <collection column="id" property="children" ofType="top.iotequ.reader.pojo.DevReaderGroup" javaType="java.util.ArrayList" select="selectChildrenById"/>
  </resultMap>
  <select id="selectChildrenById" resultMap="TreeResultMap">
		<include refid="selectSql" />  WHERE  parent = #{id}
  </select>
  <select id="selectTree" parameterType="java.lang.Integer" resultMap="TreeResultMap">
		<include refid="selectSql" /> where 
		<choose>
			<when test="id == null">parent = 0 or parent is null </when>
			<otherwise>parent = #{id,jdbcType=INTEGER} </otherwise>
		</choose>
	</select>
  <insert id="insert" parameterType="top.iotequ.reader.pojo.DevReaderGroup">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" databaseId="SQLServer">
      SELECT @@IDENTITY
    </selectKey>
    insert into dev_reader_group (name,parent,org_code,org_auth,sub_org_auth,auth_group_list)
      values 
      (#{name,jdbcType=VARCHAR},#{parent,jdbcType=INTEGER},#{orgCode,jdbcType=INTEGER},#{orgAuth,jdbcType=VARCHAR},#{subOrgAuth,jdbcType=VARCHAR},#{authGroupList,jdbcType=VARCHAR})
  </insert>
  <insert id="insert" parameterType="top.iotequ.reader.pojo.DevReaderGroup" databaseId="Oracle">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer" >
      SELECT SEQUENCE_DEV_READER_GROUP.nextval from DUAL
    </selectKey>
    insert into dev_reader_group (id,name,parent,org_code,org_auth,sub_org_auth,auth_group_list)
      values 
      (#{id,jdbcType=INTEGER},#{name,jdbcType=VARCHAR},#{parent,jdbcType=INTEGER},#{orgCode,jdbcType=INTEGER},#{orgAuth,jdbcType=VARCHAR},#{subOrgAuth,jdbcType=VARCHAR},#{authGroupList,jdbcType=VARCHAR})
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.reader.pojo.DevReaderGroup">
    insert into dev_reader_group (name,parent,org_code,org_auth,sub_org_auth,auth_group_list)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.name,jdbcType=VARCHAR},#{item.parent,jdbcType=INTEGER},#{item.orgCode,jdbcType=INTEGER},#{item.orgAuth,jdbcType=VARCHAR},#{item.subOrgAuth,jdbcType=VARCHAR},#{item.authGroupList,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.reader.pojo.DevReaderGroup" databaseId="Oracle">
     insert into dev_reader_group (id,name,parent,org_code,org_auth,sub_org_auth,auth_group_list)
       select SEQUENCE_DEV_READER_GROUP.nextval,cd.* from(
          <foreach collection="list" item="item" index="index" separator="union all">
             select #{item.name,jdbcType=VARCHAR},#{item.parent,jdbcType=INTEGER},#{item.orgCode,jdbcType=INTEGER},#{item.orgAuth,jdbcType=VARCHAR},#{item.subOrgAuth,jdbcType=VARCHAR},#{item.authGroupList,jdbcType=VARCHAR} from dual
          </foreach>
       ) cd
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.reader.pojo.DevReaderGroup">
    insert into dev_reader_group (id,name,parent,org_code,org_auth,sub_org_auth,auth_group_list)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.name,jdbcType=VARCHAR},#{item.parent,jdbcType=INTEGER},#{item.orgCode,jdbcType=INTEGER},#{item.orgAuth,jdbcType=VARCHAR},#{item.subOrgAuth,jdbcType=VARCHAR},#{item.authGroupList,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.reader.pojo.DevReaderGroup" databaseId="SQLServer">
    set IDENTITY_INSERT dev_reader_group ON 
    insert into dev_reader_group (id,name,parent,org_code,org_auth,sub_org_auth,auth_group_list)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.name,jdbcType=VARCHAR},#{item.parent,jdbcType=INTEGER},#{item.orgCode,jdbcType=INTEGER},#{item.orgAuth,jdbcType=VARCHAR},#{item.subOrgAuth,jdbcType=VARCHAR},#{item.authGroupList,jdbcType=VARCHAR})
    </foreach>
    set IDENTITY_INSERT dev_reader_group OFF 
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.reader.pojo.DevReaderGroup" databaseId="Oracle">
    insert all 
    <foreach collection="list" item="item" index="index">
      into dev_reader_group (id,name,parent,org_code,org_auth,sub_org_auth,auth_group_list) values(#{item.id,jdbcType=INTEGER},#{item.name,jdbcType=VARCHAR},#{item.parent,jdbcType=INTEGER},#{item.orgCode,jdbcType=INTEGER},#{item.orgAuth,jdbcType=VARCHAR},#{item.subOrgAuth,jdbcType=VARCHAR},#{item.authGroupList,jdbcType=VARCHAR})
    </foreach>
    select 1 from dual
  </insert>
  <select id="select" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <include refid="selectSql" /> where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from dev_reader_group where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBatch" parameterType="java.lang.String">
    delete from dev_reader_group where id in (${_parameter})
  </delete>
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    <include refid="selectSql" /> where name = #{name,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByName" parameterType="java.lang.String">
    delete from dev_reader_group where name = #{name,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteBatchByName" parameterType="java.lang.String">
    delete from dev_reader_group where name in     <foreach item="item" index="index" collection="_parameter.split(',')" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <delete id="deleteList" parameterType="java.util.List">
    delete from dev_reader_group where id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
       #{item.id,jdbcType=INTEGER}
    </foreach>
  </delete>
  <update id="update" parameterType="top.iotequ.reader.pojo.DevReaderGroup">
    update dev_reader_group set 
      name = #{name,jdbcType=VARCHAR},
      parent = #{parent,jdbcType=INTEGER},
      org_code = #{orgCode,jdbcType=INTEGER},
      org_auth = #{orgAuth,jdbcType=VARCHAR},
      sub_org_auth = #{subOrgAuth,jdbcType=VARCHAR},
      auth_group_list = #{authGroupList,jdbcType=VARCHAR}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateSelective" parameterType="java.util.Map">
    update dev_reader_group 
      <set>
        <if test='name_string_ == "[null]"'> name = NULL, </if>
        <if test='name != null and name_string_ != "[null]"'> name = #{name,jdbcType=VARCHAR},</if>
        <if test='parent_string_ == "[null]"'> parent = NULL, </if>
        <if test='parent != null and parent_string_ != "[null]"'> parent = #{parent,jdbcType=INTEGER},</if>
        <if test='orgCode_string_ == "[null]"'> org_code = NULL, </if>
        <if test='orgCode != null and orgCode_string_ != "[null]"'> org_code = #{orgCode,jdbcType=INTEGER},</if>
        <if test='orgAuth_string_ == "[null]"'> org_auth = NULL, </if>
        <if test='orgAuth != null and orgAuth_string_ != "[null]"'> org_auth = #{orgAuth,jdbcType=VARCHAR},</if>
        <if test='subOrgAuth_string_ == "[null]"'> sub_org_auth = NULL, </if>
        <if test='subOrgAuth != null and subOrgAuth_string_ != "[null]"'> sub_org_auth = #{subOrgAuth,jdbcType=VARCHAR},</if>
        <if test='authGroupList_string_ == "[null]"'> auth_group_list = NULL, </if>
        <if test='authGroupList != null and authGroupList_string_ != "[null]"'> auth_group_list = #{authGroupList,jdbcType=VARCHAR},</if>
      </set>
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBy" parameterType="top.iotequ.reader.pojo.DevReaderGroup">
    update dev_reader_group set 
      id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      parent = #{record.parent,jdbcType=INTEGER},
      org_code = #{record.orgCode,jdbcType=INTEGER},
      org_auth = #{record.orgAuth,jdbcType=VARCHAR},
      sub_org_auth = #{record.subOrgAuth,jdbcType=VARCHAR},
      auth_group_list = #{record.authGroupList,jdbcType=VARCHAR}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="list" parameterType="top.iotequ.reader.pojo.DevReaderGroup" resultMap="BaseResultMap">
    <include refid="selectSql" />
     where 1=1 
        <if test="id != null"> and id = #{id,jdbcType=INTEGER} </if>
        <if test="name != null"> and name like #{name,jdbcType=VARCHAR} </if>
        <if test="parent != null"> and parent = #{parent,jdbcType=INTEGER} </if>
        <if test="orgCode != null"> and org_code = #{orgCode,jdbcType=INTEGER} </if>
        <if test="orgAuth != null"> and org_auth like #{orgAuth,jdbcType=VARCHAR} </if>
        <if test="subOrgAuth != null"> and sub_org_auth like #{subOrgAuth,jdbcType=VARCHAR} </if>
        <if test="authGroupList != null"> and auth_group_list like #{authGroupList,jdbcType=VARCHAR} </if>
  </select>
  <select id="listBy" parameterType="map" resultMap="BaseResultMap">
    <include refid="selectSql" />
        <if test="whereString != null and whereString !=''"> where ${whereString} </if>
        <if test="orderString != null and orderString!=''"> order by ${orderString} </if>
  </select>
  <select id="query" parameterType="map" resultMap="BaseResultMap">
        ${sqlString}
  </select>
</mapper>
