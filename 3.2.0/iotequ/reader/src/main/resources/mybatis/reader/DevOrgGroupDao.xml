<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.iotequ.reader.dao.DevOrgGroupDao">
  <resultMap id="BaseResultMap" type="top.iotequ.reader.pojo.DevOrgGroup">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="is_include_sub_org" jdbcType="TINYINT" property="isIncludeSubOrg" />
    <result column="org_id" jdbcType="INTEGER" property="orgId" />
    <result column="org_name" jdbcType="VARCHAR" property="orgName" />
  </resultMap>
  <sql id = "selectSql">
     SELECT dev_org_group.id,dev_org_group.group_id,dev_org_group.is_include_sub_org,sys_org.org_code AS org_id,sys_org.name AS org_name FROM dev_org_group RIGHT JOIN sys_org ON dev_org_group.org_id = sys_org.org_code
  </sql>
  <insert id="insert" parameterType="top.iotequ.reader.pojo.DevOrgGroup">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" databaseId="SQLServer">
      SELECT @@IDENTITY
    </selectKey>
    insert into dev_org_group (group_id,is_include_sub_org,org_id)
      values 
      (#{groupId,jdbcType=INTEGER},#{isIncludeSubOrg,jdbcType=TINYINT},#{orgId,jdbcType=INTEGER})
  </insert>
  <insert id="insert" parameterType="top.iotequ.reader.pojo.DevOrgGroup" databaseId="Oracle">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer" >
      SELECT SEQUENCE_DEV_ORG_GROUP.nextval from DUAL
    </selectKey>
    insert into dev_org_group (id,group_id,is_include_sub_org,org_id)
      values 
      (#{id,jdbcType=INTEGER},#{groupId,jdbcType=INTEGER},#{isIncludeSubOrg,jdbcType=TINYINT},#{orgId,jdbcType=INTEGER})
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.reader.pojo.DevOrgGroup">
    insert into dev_org_group (group_id,is_include_sub_org,org_id)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.groupId,jdbcType=INTEGER},#{item.isIncludeSubOrg,jdbcType=TINYINT},#{item.orgId,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.reader.pojo.DevOrgGroup" databaseId="Oracle">
     insert into dev_org_group (id,group_id,is_include_sub_org,org_id)
       select SEQUENCE_DEV_ORG_GROUP.nextval,cd.* from(
          <foreach collection="list" item="item" index="index" separator="union all">
             select #{item.groupId,jdbcType=INTEGER},#{item.isIncludeSubOrg,jdbcType=TINYINT},#{item.orgId,jdbcType=INTEGER} from dual
          </foreach>
       ) cd
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.reader.pojo.DevOrgGroup">
    insert into dev_org_group (id,group_id,is_include_sub_org,org_id)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.groupId,jdbcType=INTEGER},#{item.isIncludeSubOrg,jdbcType=TINYINT},#{item.orgId,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.reader.pojo.DevOrgGroup" databaseId="SQLServer">
    set IDENTITY_INSERT dev_org_group ON 
    insert into dev_org_group (id,group_id,is_include_sub_org,org_id)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.groupId,jdbcType=INTEGER},#{item.isIncludeSubOrg,jdbcType=TINYINT},#{item.orgId,jdbcType=INTEGER})
    </foreach>
    set IDENTITY_INSERT dev_org_group OFF 
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.reader.pojo.DevOrgGroup" databaseId="Oracle">
    insert all 
    <foreach collection="list" item="item" index="index">
      into dev_org_group (id,group_id,is_include_sub_org,org_id) values(#{item.id,jdbcType=INTEGER},#{item.groupId,jdbcType=INTEGER},#{item.isIncludeSubOrg,jdbcType=TINYINT},#{item.orgId,jdbcType=INTEGER})
    </foreach>
    select 1 from dual
  </insert>
  <select id="select" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <include refid="selectSql" /> where dev_org_group.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from dev_org_group where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBatch" parameterType="java.lang.String">
    delete from dev_org_group where id in (${_parameter})
  </delete>
  <select id="selectByGroupIdOrgId" parameterType="map" resultMap="BaseResultMap">
    <include refid="selectSql" /> where dev_org_group.group_id = #{groupId} AND sys_org.org_code = #{orgId}
  </select>
  <delete id="deleteByGroupIdOrgId" parameterType="map" >
    delete from dev_org_group where dev_org_group.group_id = #{groupId} AND sys_org.org_code = #{orgId}
  </delete>
  <delete id="deleteList" parameterType="java.util.List">
    delete from dev_org_group where id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
       #{item.id,jdbcType=INTEGER}
    </foreach>
  </delete>
  <update id="update" parameterType="top.iotequ.reader.pojo.DevOrgGroup">
    update dev_org_group set 
      group_id = #{groupId,jdbcType=INTEGER},
      is_include_sub_org = #{isIncludeSubOrg,jdbcType=TINYINT},
      org_id = #{orgId,jdbcType=INTEGER}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateSelective" parameterType="java.util.Map">
    update dev_org_group 
      <set>
        <if test='groupId_string_ == "[null]"'> group_id = NULL, </if>
        <if test='groupId != null and groupId_string_ != "[null]"'> group_id = #{groupId,jdbcType=INTEGER},</if>
        <if test='isIncludeSubOrg_string_ == "[null]"'> is_include_sub_org = NULL, </if>
        <if test='isIncludeSubOrg != null and isIncludeSubOrg_string_ != "[null]"'> is_include_sub_org = #{isIncludeSubOrg,jdbcType=TINYINT},</if>
        <if test="orgId != null"> org_id = #{orgId,jdbcType=INTEGER},</if>
      </set>
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBy" parameterType="top.iotequ.reader.pojo.DevOrgGroup">
    update dev_org_group set 
      id = #{record.id,jdbcType=INTEGER},
      group_id = #{record.groupId,jdbcType=INTEGER},
      is_include_sub_org = #{record.isIncludeSubOrg,jdbcType=TINYINT},
      org_id = #{record.orgId,jdbcType=INTEGER}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="list" parameterType="top.iotequ.reader.pojo.DevOrgGroup" resultMap="BaseResultMap">
    <include refid="selectSql" />
     where 1=1 
        <if test="id != null"> and dev_org_group.id = #{id,jdbcType=INTEGER} </if>
        <if test="groupId != null"> and dev_org_group.group_id = #{groupId,jdbcType=INTEGER} </if>
        <if test="isIncludeSubOrg != null"> and dev_org_group.is_include_sub_org = #{isIncludeSubOrg,jdbcType=TINYINT} </if>
        <if test="orgId != null"> and sys_org.org_code = #{orgId,jdbcType=INTEGER} </if>
        <if test="orgName != null"> and sys_org.name like #{orgName,jdbcType=VARCHAR} </if>
  </select>
  <select id="listBy" parameterType="map" resultMap="BaseResultMap">
    <include refid="selectSql" />
        <if test="whereString != null and whereString !=''"> where ${whereString} </if>
        <if test="orderString != null and orderString!=''"> order by ${orderString} </if>
  </select>
  <select id="query" parameterType="map" resultMap="BaseResultMap">
        ${sqlString}
  </select>
</mapper>
