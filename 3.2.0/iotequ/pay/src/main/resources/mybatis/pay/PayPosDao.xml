<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.iotequ.pay.dao.PayPosDao">
  <resultMap id="BaseResultMap" type="top.iotequ.pay.pojo.PayPos">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="no" jdbcType="VARCHAR" property="no" />
    <result column="shop_id" jdbcType="INTEGER" property="shopId" />
    <result column="security_code" jdbcType="VARCHAR" property="securityCode" />
    <result column="work_code" jdbcType="VARCHAR" property="workCode" />
    <result column="login_id" jdbcType="INTEGER" property="loginId" />
    <result column="ewallet_active" jdbcType="TINYINT" property="ewalletActive" />
    <result column="count_project_list" jdbcType="VARCHAR" property="countProjectList" />
    <result column="time_project_list" jdbcType="VARCHAR" property="timeProjectList" />
  </resultMap>
  <sql id = "selectSql">
     SELECT id,no,shop_id,security_code,work_code,login_id,ewallet_active,count_project_list,time_project_list FROM pay_pos
  </sql>
  <insert id="insert" parameterType="top.iotequ.pay.pojo.PayPos">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" databaseId="SQLServer">
      SELECT @@IDENTITY
    </selectKey>
    insert into pay_pos (no,shop_id,security_code,work_code,login_id,ewallet_active,count_project_list,time_project_list)
      values 
      (#{no,jdbcType=VARCHAR},#{shopId,jdbcType=INTEGER},#{securityCode,jdbcType=VARCHAR},#{workCode,jdbcType=VARCHAR},#{loginId,jdbcType=INTEGER},#{ewalletActive,jdbcType=TINYINT},#{countProjectList,jdbcType=VARCHAR},#{timeProjectList,jdbcType=VARCHAR})
  </insert>
  <insert id="insert" parameterType="top.iotequ.pay.pojo.PayPos" databaseId="Oracle">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer" >
      SELECT SEQUENCE_PAY_POS.nextval from DUAL
    </selectKey>
    insert into pay_pos (id,no,shop_id,security_code,work_code,login_id,ewallet_active,count_project_list,time_project_list)
      values 
      (#{id,jdbcType=INTEGER},#{no,jdbcType=VARCHAR},#{shopId,jdbcType=INTEGER},#{securityCode,jdbcType=VARCHAR},#{workCode,jdbcType=VARCHAR},#{loginId,jdbcType=INTEGER},#{ewalletActive,jdbcType=TINYINT},#{countProjectList,jdbcType=VARCHAR},#{timeProjectList,jdbcType=VARCHAR})
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.pay.pojo.PayPos">
    insert into pay_pos (no,shop_id,security_code,work_code,login_id,ewallet_active,count_project_list,time_project_list)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.no,jdbcType=VARCHAR},#{item.shopId,jdbcType=INTEGER},#{item.securityCode,jdbcType=VARCHAR},#{item.workCode,jdbcType=VARCHAR},#{item.loginId,jdbcType=INTEGER},#{item.ewalletActive,jdbcType=TINYINT},#{item.countProjectList,jdbcType=VARCHAR},#{item.timeProjectList,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.pay.pojo.PayPos" databaseId="Oracle">
     insert into pay_pos (id,no,shop_id,security_code,work_code,login_id,ewallet_active,count_project_list,time_project_list)
       select SEQUENCE_PAY_POS.nextval,cd.* from(
          <foreach collection="list" item="item" index="index" separator="union all">
             select #{item.no,jdbcType=VARCHAR},#{item.shopId,jdbcType=INTEGER},#{item.securityCode,jdbcType=VARCHAR},#{item.workCode,jdbcType=VARCHAR},#{item.loginId,jdbcType=INTEGER},#{item.ewalletActive,jdbcType=TINYINT},#{item.countProjectList,jdbcType=VARCHAR},#{item.timeProjectList,jdbcType=VARCHAR} from dual
          </foreach>
       ) cd
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.pay.pojo.PayPos">
    insert into pay_pos (id,no,shop_id,security_code,work_code,login_id,ewallet_active,count_project_list,time_project_list)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.no,jdbcType=VARCHAR},#{item.shopId,jdbcType=INTEGER},#{item.securityCode,jdbcType=VARCHAR},#{item.workCode,jdbcType=VARCHAR},#{item.loginId,jdbcType=INTEGER},#{item.ewalletActive,jdbcType=TINYINT},#{item.countProjectList,jdbcType=VARCHAR},#{item.timeProjectList,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.pay.pojo.PayPos" databaseId="SQLServer">
    set IDENTITY_INSERT pay_pos ON 
    insert into pay_pos (id,no,shop_id,security_code,work_code,login_id,ewallet_active,count_project_list,time_project_list)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.no,jdbcType=VARCHAR},#{item.shopId,jdbcType=INTEGER},#{item.securityCode,jdbcType=VARCHAR},#{item.workCode,jdbcType=VARCHAR},#{item.loginId,jdbcType=INTEGER},#{item.ewalletActive,jdbcType=TINYINT},#{item.countProjectList,jdbcType=VARCHAR},#{item.timeProjectList,jdbcType=VARCHAR})
    </foreach>
    set IDENTITY_INSERT pay_pos OFF 
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.pay.pojo.PayPos" databaseId="Oracle">
    insert all 
    <foreach collection="list" item="item" index="index">
      into pay_pos (id,no,shop_id,security_code,work_code,login_id,ewallet_active,count_project_list,time_project_list) values(#{item.id,jdbcType=INTEGER},#{item.no,jdbcType=VARCHAR},#{item.shopId,jdbcType=INTEGER},#{item.securityCode,jdbcType=VARCHAR},#{item.workCode,jdbcType=VARCHAR},#{item.loginId,jdbcType=INTEGER},#{item.ewalletActive,jdbcType=TINYINT},#{item.countProjectList,jdbcType=VARCHAR},#{item.timeProjectList,jdbcType=VARCHAR})
    </foreach>
    select 1 from dual
  </insert>
  <select id="select" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <include refid="selectSql" /> where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from pay_pos where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBatch" parameterType="java.lang.String">
    delete from pay_pos where id in (${_parameter})
  </delete>
  <select id="selectByNo" parameterType="java.lang.String" resultMap="BaseResultMap">
    <include refid="selectSql" /> where no = #{no,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByNo" parameterType="java.lang.String">
    delete from pay_pos where no = #{no,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteBatchByNo" parameterType="java.lang.String">
    delete from pay_pos where no in     <foreach item="item" index="index" collection="_parameter.split(',')" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <delete id="deleteList" parameterType="java.util.List">
    delete from pay_pos where id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
       #{item.id,jdbcType=INTEGER}
    </foreach>
  </delete>
  <update id="update" parameterType="top.iotequ.pay.pojo.PayPos">
    update pay_pos set 
      no = #{no,jdbcType=VARCHAR},
      shop_id = #{shopId,jdbcType=INTEGER},
      security_code = #{securityCode,jdbcType=VARCHAR},
      work_code = #{workCode,jdbcType=VARCHAR},
      login_id = #{loginId,jdbcType=INTEGER},
      ewallet_active = #{ewalletActive,jdbcType=TINYINT},
      count_project_list = #{countProjectList,jdbcType=VARCHAR},
      time_project_list = #{timeProjectList,jdbcType=VARCHAR}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateSelective" parameterType="java.util.Map">
    update pay_pos 
      <set>
        <if test='no_string_ == "[null]"'> no = NULL, </if>
        <if test='no != null and no_string_ != "[null]"'> no = #{no,jdbcType=VARCHAR},</if>
        <if test='shopId_string_ == "[null]"'> shop_id = NULL, </if>
        <if test='shopId != null and shopId_string_ != "[null]"'> shop_id = #{shopId,jdbcType=INTEGER},</if>
        <if test='securityCode_string_ == "[null]"'> security_code = NULL, </if>
        <if test='securityCode != null and securityCode_string_ != "[null]"'> security_code = #{securityCode,jdbcType=VARCHAR},</if>
        <if test='workCode_string_ == "[null]"'> work_code = NULL, </if>
        <if test='workCode != null and workCode_string_ != "[null]"'> work_code = #{workCode,jdbcType=VARCHAR},</if>
        <if test='loginId_string_ == "[null]"'> login_id = NULL, </if>
        <if test='loginId != null and loginId_string_ != "[null]"'> login_id = #{loginId,jdbcType=INTEGER},</if>
        <if test='ewalletActive_string_ == "[null]"'> ewallet_active = NULL, </if>
        <if test='ewalletActive != null and ewalletActive_string_ != "[null]"'> ewallet_active = #{ewalletActive,jdbcType=TINYINT},</if>
        <if test='countProjectList_string_ == "[null]"'> count_project_list = NULL, </if>
        <if test='countProjectList != null and countProjectList_string_ != "[null]"'> count_project_list = #{countProjectList,jdbcType=VARCHAR},</if>
        <if test='timeProjectList_string_ == "[null]"'> time_project_list = NULL, </if>
        <if test='timeProjectList != null and timeProjectList_string_ != "[null]"'> time_project_list = #{timeProjectList,jdbcType=VARCHAR},</if>
      </set>
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBy" parameterType="top.iotequ.pay.pojo.PayPos">
    update pay_pos set 
      id = #{record.id,jdbcType=INTEGER},
      no = #{record.no,jdbcType=VARCHAR},
      shop_id = #{record.shopId,jdbcType=INTEGER},
      security_code = #{record.securityCode,jdbcType=VARCHAR},
      work_code = #{record.workCode,jdbcType=VARCHAR},
      login_id = #{record.loginId,jdbcType=INTEGER},
      ewallet_active = #{record.ewalletActive,jdbcType=TINYINT},
      count_project_list = #{record.countProjectList,jdbcType=VARCHAR},
      time_project_list = #{record.timeProjectList,jdbcType=VARCHAR}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="list" parameterType="top.iotequ.pay.pojo.PayPos" resultMap="BaseResultMap">
    <include refid="selectSql" />
     where 1=1 
        <if test="id != null"> and id = #{id,jdbcType=INTEGER} </if>
        <if test="no != null"> and no like #{no,jdbcType=VARCHAR} </if>
        <if test="shopId != null"> and shop_id = #{shopId,jdbcType=INTEGER} </if>
        <if test="securityCode != null"> and security_code like #{securityCode,jdbcType=VARCHAR} </if>
        <if test="workCode != null"> and work_code like #{workCode,jdbcType=VARCHAR} </if>
        <if test="loginId != null"> and login_id = #{loginId,jdbcType=INTEGER} </if>
        <if test="ewalletActive != null"> and ewallet_active = #{ewalletActive,jdbcType=TINYINT} </if>
        <if test="countProjectList != null"> and count_project_list like #{countProjectList,jdbcType=VARCHAR} </if>
        <if test="timeProjectList != null"> and time_project_list like #{timeProjectList,jdbcType=VARCHAR} </if>
  </select>
  <select id="listBy" parameterType="map" resultMap="BaseResultMap">
    <include refid="selectSql" />
        <if test="whereString != null and whereString !=''"> where ${whereString} </if>
        <if test="orderString != null and orderString!=''"> order by ${orderString} </if>
  </select>
  <select id="query" parameterType="map" resultMap="BaseResultMap">
        ${sqlString}
  </select>
</mapper>
