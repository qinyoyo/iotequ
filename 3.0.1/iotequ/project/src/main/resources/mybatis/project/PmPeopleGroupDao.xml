<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.iotequ.project.people.dao.PmPeopleGroupDao">
  <resultMap id="BaseResultMap" type="top.iotequ.project.people.pojo.PmPeopleGroup">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parent" jdbcType="INTEGER" property="parent" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="group_type" jdbcType="VARCHAR" property="groupType" />
    <result column="enabled" jdbcType="TINYINT" property="enabled" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id = "selectSql">
     SELECT id,parent,name,group_type,enabled,description FROM pm_people_group
  </sql>
  <resultMap id="TreeResultMap" type="top.iotequ.project.people.pojo.PmPeopleGroup">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parent" jdbcType="INTEGER" property="parent" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="group_type" jdbcType="VARCHAR" property="groupType" />
    <result column="enabled" jdbcType="TINYINT" property="enabled" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <collection column="id" property="children" ofType="top.iotequ.project.people.pojo.PmPeopleGroup" javaType="java.util.ArrayList" select="selectChildrenById"/>
  </resultMap>
  <select id="selectChildrenById" resultMap="TreeResultMap">
		<include refid="selectSql" />  WHERE  parent = #{id}
  </select>
  <select id="selectTree" parameterType="java.lang.Integer" resultMap="TreeResultMap">
		<include refid="selectSql" /> where 
		<choose>
			<when test="id == null">parent = 0 or parent is null </when>
			<otherwise>parent = #{id,jdbcType=INTEGER} </otherwise>
		</choose>
	</select>
  <insert id="insert" parameterType="top.iotequ.project.people.pojo.PmPeopleGroup">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" databaseId="SQLServer">
      SELECT @@IDENTITY
    </selectKey>
    insert into pm_people_group (parent,name,group_type,enabled,description)
      values 
      (#{parent,jdbcType=INTEGER},#{name,jdbcType=VARCHAR},#{groupType,jdbcType=VARCHAR},#{enabled,jdbcType=TINYINT},#{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insert" parameterType="top.iotequ.project.people.pojo.PmPeopleGroup" databaseId="Oracle">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer" >
      SELECT SEQUENCE_PM_PEOPLE_GROUP.nextval from DUAL
    </selectKey>
    insert into pm_people_group (id,parent,name,group_type,enabled,description)
      values 
      (#{id,jdbcType=INTEGER},#{parent,jdbcType=INTEGER},#{name,jdbcType=VARCHAR},#{groupType,jdbcType=VARCHAR},#{enabled,jdbcType=TINYINT},#{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.project.people.pojo.PmPeopleGroup">
    insert into pm_people_group (parent,name,group_type,enabled,description)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.parent,jdbcType=INTEGER},#{item.name,jdbcType=VARCHAR},#{item.groupType,jdbcType=VARCHAR},#{item.enabled,jdbcType=TINYINT},#{item.description,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.project.people.pojo.PmPeopleGroup" databaseId="Oracle">
     insert into pm_people_group (id,parent,name,group_type,enabled,description)
       select SEQUENCE_PM_PEOPLE_GROUP.nextval,cd.* from(
          <foreach collection="list" item="item" index="index" separator="union all">
             select #{item.parent,jdbcType=INTEGER},#{item.name,jdbcType=VARCHAR},#{item.groupType,jdbcType=VARCHAR},#{item.enabled,jdbcType=TINYINT},#{item.description,jdbcType=VARCHAR} from dual
          </foreach>
       ) cd
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.project.people.pojo.PmPeopleGroup">
    insert into pm_people_group (id,parent,name,group_type,enabled,description)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.parent,jdbcType=INTEGER},#{item.name,jdbcType=VARCHAR},#{item.groupType,jdbcType=VARCHAR},#{item.enabled,jdbcType=TINYINT},#{item.description,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.project.people.pojo.PmPeopleGroup" databaseId="SQLServer">
    set IDENTITY_INSERT pm_people_group ON 
    insert into pm_people_group (id,parent,name,group_type,enabled,description)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.parent,jdbcType=INTEGER},#{item.name,jdbcType=VARCHAR},#{item.groupType,jdbcType=VARCHAR},#{item.enabled,jdbcType=TINYINT},#{item.description,jdbcType=VARCHAR})
    </foreach>
    set IDENTITY_INSERT pm_people_group OFF 
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.project.people.pojo.PmPeopleGroup" databaseId="Oracle">
    insert all 
    <foreach collection="list" item="item" index="index">
      into pm_people_group (id,parent,name,group_type,enabled,description) values(#{item.id,jdbcType=INTEGER},#{item.parent,jdbcType=INTEGER},#{item.name,jdbcType=VARCHAR},#{item.groupType,jdbcType=VARCHAR},#{item.enabled,jdbcType=TINYINT},#{item.description,jdbcType=VARCHAR})
    </foreach>
    select 1 from dual
  </insert>
  <select id="select" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <include refid="selectSql" /> where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from pm_people_group where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBatch" parameterType="java.lang.String">
    delete from pm_people_group where id in (${_parameter})
  </delete>
  <select id="selectByGroupType" parameterType="java.lang.String" resultMap="BaseResultMap">
    <include refid="selectSql" /> where group_type = #{groupType,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByGroupType" parameterType="java.lang.String">
    delete from pm_people_group where group_type = #{groupType,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteBatchByGroupType" parameterType="java.lang.String">
    delete from pm_people_group where group_type in     <foreach item="item" index="index" collection="_parameter.split(',')" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <delete id="deleteList" parameterType="java.util.List">
    delete from pm_people_group where id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
       #{item.id,jdbcType=INTEGER}
    </foreach>
  </delete>
  <update id="update" parameterType="top.iotequ.project.people.pojo.PmPeopleGroup">
    update pm_people_group set 
      parent = #{parent,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      group_type = #{groupType,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=TINYINT},
      description = #{description,jdbcType=VARCHAR}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateSelective" parameterType="java.util.Map">
    update pm_people_group 
      <set>
        <if test='parent == "[null]"'> parent = NULL, </if>
        <if test='parent != null and parent != "[null]"'> parent = #{parent,jdbcType=INTEGER},</if>
        <if test='name == "[null]"'> name = NULL, </if>
        <if test='name != null and name != "[null]"'> name = #{name,jdbcType=VARCHAR},</if>
        <if test='groupType == "[null]"'> group_type = NULL, </if>
        <if test='groupType != null and groupType != "[null]"'> group_type = #{groupType,jdbcType=VARCHAR},</if>
        <if test='enabled == "[null]"'> enabled = NULL, </if>
        <if test='enabled != null and enabled != "[null]"'> enabled = #{enabled,jdbcType=TINYINT},</if>
        <if test='description == "[null]"'> description = NULL, </if>
        <if test='description != null and description != "[null]"'> description = #{description,jdbcType=VARCHAR},</if>
      </set>
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBy" parameterType="top.iotequ.project.people.pojo.PmPeopleGroup">
    update pm_people_group set 
      id = #{record.id,jdbcType=INTEGER},
      parent = #{record.parent,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      group_type = #{record.groupType,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=TINYINT},
      description = #{record.description,jdbcType=VARCHAR}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="list" parameterType="top.iotequ.project.people.pojo.PmPeopleGroup" resultMap="BaseResultMap">
    <include refid="selectSql" />
     where 1=1 
        <if test="id != null"> and id = #{id,jdbcType=INTEGER} </if>
        <if test="parent != null"> and parent = #{parent,jdbcType=INTEGER} </if>
        <if test="name != null"> and name like #{name,jdbcType=VARCHAR} </if>
        <if test="groupType != null"> and group_type like #{groupType,jdbcType=VARCHAR} </if>
        <if test="enabled != null"> and enabled = #{enabled,jdbcType=TINYINT} </if>
        <if test="description != null"> and description like #{description,jdbcType=VARCHAR} </if>
  </select>
  <select id="listBy" parameterType="map" resultMap="BaseResultMap">
    <include refid="selectSql" />
        <if test="whereString != null and whereString !=''"> where ${whereString} </if>
        <if test="orderString != null and orderString!=''"> order by ${orderString} </if>
  </select>
  <select id="query" parameterType="map" resultMap="BaseResultMap">
        ${sqlString}
  </select>
</mapper>
