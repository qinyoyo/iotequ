<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.iotequ.ewallet.dao.EwUserCountDao">
  <resultMap id="BaseResultMap" type="top.iotequ.ewallet.pojo.EwUserCount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="amount_count" jdbcType="INTEGER" property="amountCount" />
    <result column="check_code" jdbcType="VARCHAR" property="checkCode" />
    <result column="cost_limit" jdbcType="INTEGER" property="costLimit" />
    <result column="day_limit" jdbcType="INTEGER" property="dayLimit" />
    <result column="user_no" jdbcType="VARCHAR" property="userNo" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="member_group" jdbcType="VARCHAR" property="memberGroup" />
    <result column="user_is_active" jdbcType="TINYINT" property="userIsActive" />
    <result column="count_id" jdbcType="INTEGER" property="countId" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="base_price" jdbcType="INTEGER" property="basePrice" />
    <result column="start_time" jdbcType="TIME" property="startTime" />
    <result column="end_time" jdbcType="TIME" property="endTime" />
  </resultMap>
  <sql id = "selectSql">
     SELECT ew_user_count.id,ew_user_count.amount_count,ew_user_count.check_code,ew_user_count.cost_limit,ew_user_count.day_limit,ew_user_count.user_no,ew_user.name AS user_name,ew_user.member_group AS member_group,ew_user.is_active AS user_is_active,ew_user_count.count_id,ew_count_project.name AS project_name,ew_count_project.base_price AS base_price,ew_count_project.start_time AS start_time,ew_count_project.end_time AS end_time FROM ew_user_count LEFT JOIN ew_user ON ew_user_count.user_no = ew_user.user_no LEFT JOIN ew_count_project ON ew_user_count.count_id = ew_count_project.id
  </sql>
  <insert id="insert" parameterType="top.iotequ.ewallet.pojo.EwUserCount">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" databaseId="SQLServer">
      SELECT @@IDENTITY
    </selectKey>
    insert into ew_user_count (amount_count,check_code,cost_limit,day_limit,user_no,count_id)
      values 
      (#{amountCount,jdbcType=INTEGER},#{checkCode,jdbcType=VARCHAR},#{costLimit,jdbcType=INTEGER},#{dayLimit,jdbcType=INTEGER},#{userNo,jdbcType=VARCHAR},#{countId,jdbcType=INTEGER})
  </insert>
  <insert id="insert" parameterType="top.iotequ.ewallet.pojo.EwUserCount" databaseId="Oracle">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer" >
      SELECT SEQUENCE_EW_USER_COUNT.nextval from DUAL
    </selectKey>
    insert into ew_user_count (id,amount_count,check_code,cost_limit,day_limit,user_no,count_id)
      values 
      (#{id,jdbcType=INTEGER},#{amountCount,jdbcType=INTEGER},#{checkCode,jdbcType=VARCHAR},#{costLimit,jdbcType=INTEGER},#{dayLimit,jdbcType=INTEGER},#{userNo,jdbcType=VARCHAR},#{countId,jdbcType=INTEGER})
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.ewallet.pojo.EwUserCount">
    insert into ew_user_count (amount_count,check_code,cost_limit,day_limit,user_no,count_id)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.amountCount,jdbcType=INTEGER},#{item.checkCode,jdbcType=VARCHAR},#{item.costLimit,jdbcType=INTEGER},#{item.dayLimit,jdbcType=INTEGER},#{item.userNo,jdbcType=VARCHAR},#{item.countId,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.ewallet.pojo.EwUserCount" databaseId="Oracle">
     insert into ew_user_count (id,amount_count,check_code,cost_limit,day_limit,user_no,count_id)
       select SEQUENCE_EW_USER_COUNT.nextval,cd.* from(
          <foreach collection="list" item="item" index="index" separator="union all">
             select #{item.amountCount,jdbcType=INTEGER},#{item.checkCode,jdbcType=VARCHAR},#{item.costLimit,jdbcType=INTEGER},#{item.dayLimit,jdbcType=INTEGER},#{item.userNo,jdbcType=VARCHAR},#{item.countId,jdbcType=INTEGER} from dual
          </foreach>
       ) cd
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.ewallet.pojo.EwUserCount">
    insert into ew_user_count (id,amount_count,check_code,cost_limit,day_limit,user_no,count_id)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.amountCount,jdbcType=INTEGER},#{item.checkCode,jdbcType=VARCHAR},#{item.costLimit,jdbcType=INTEGER},#{item.dayLimit,jdbcType=INTEGER},#{item.userNo,jdbcType=VARCHAR},#{item.countId,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.ewallet.pojo.EwUserCount" databaseId="SQLServer">
    set IDENTITY_INSERT ew_user_count ON 
    insert into ew_user_count (id,amount_count,check_code,cost_limit,day_limit,user_no,count_id)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.amountCount,jdbcType=INTEGER},#{item.checkCode,jdbcType=VARCHAR},#{item.costLimit,jdbcType=INTEGER},#{item.dayLimit,jdbcType=INTEGER},#{item.userNo,jdbcType=VARCHAR},#{item.countId,jdbcType=INTEGER})
    </foreach>
    set IDENTITY_INSERT ew_user_count OFF 
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.ewallet.pojo.EwUserCount" databaseId="Oracle">
    insert all 
    <foreach collection="list" item="item" index="index">
      into ew_user_count (id,amount_count,check_code,cost_limit,day_limit,user_no,count_id) values(#{item.id,jdbcType=INTEGER},#{item.amountCount,jdbcType=INTEGER},#{item.checkCode,jdbcType=VARCHAR},#{item.costLimit,jdbcType=INTEGER},#{item.dayLimit,jdbcType=INTEGER},#{item.userNo,jdbcType=VARCHAR},#{item.countId,jdbcType=INTEGER})
    </foreach>
    select 1 from dual
  </insert>
  <select id="select" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <include refid="selectSql" /> where ew_user_count.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from ew_user_count where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBatch" parameterType="java.lang.String">
    delete from ew_user_count where id in (${_parameter})
  </delete>
  <select id="selectByUserNoCountId" parameterType="map" resultMap="BaseResultMap">
    <include refid="selectSql" /> where ew_user_count.user_no = #{userNo} AND ew_user_count.count_id = #{countId}
  </select>
  <delete id="deleteByUserNoCountId" parameterType="map" >
    delete from ew_user_count where ew_user_count.user_no = #{userNo} AND ew_user_count.count_id = #{countId}
  </delete>
  <delete id="deleteList" parameterType="java.util.List">
    delete from ew_user_count where id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
       #{item.id,jdbcType=INTEGER}
    </foreach>
  </delete>
  <update id="update" parameterType="top.iotequ.ewallet.pojo.EwUserCount">
    update ew_user_count set 
      amount_count = #{amountCount,jdbcType=INTEGER},
      check_code = #{checkCode,jdbcType=VARCHAR},
      cost_limit = #{costLimit,jdbcType=INTEGER},
      day_limit = #{dayLimit,jdbcType=INTEGER},
      user_no = #{userNo,jdbcType=VARCHAR},
      count_id = #{countId,jdbcType=INTEGER}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateSelective" parameterType="java.util.Map">
    update ew_user_count 
      <set>
        <if test='amountCount_string_ == "[null]"'> amount_count = NULL, </if>
        <if test='amountCount != null and amountCount_string_ != "[null]"'> amount_count = #{amountCount,jdbcType=INTEGER},</if>
        <if test='checkCode_string_ == "[null]"'> check_code = NULL, </if>
        <if test='checkCode != null and checkCode_string_ != "[null]"'> check_code = #{checkCode,jdbcType=VARCHAR},</if>
        <if test='costLimit_string_ == "[null]"'> cost_limit = NULL, </if>
        <if test='costLimit != null and costLimit_string_ != "[null]"'> cost_limit = #{costLimit,jdbcType=INTEGER},</if>
        <if test='dayLimit_string_ == "[null]"'> day_limit = NULL, </if>
        <if test='dayLimit != null and dayLimit_string_ != "[null]"'> day_limit = #{dayLimit,jdbcType=INTEGER},</if>
        <if test="userNo != null"> user_no = #{userNo,jdbcType=VARCHAR},</if>
        <if test="countId != null"> count_id = #{countId,jdbcType=INTEGER},</if>
      </set>
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBy" parameterType="top.iotequ.ewallet.pojo.EwUserCount">
    update ew_user_count set 
      id = #{record.id,jdbcType=INTEGER},
      amount_count = #{record.amountCount,jdbcType=INTEGER},
      check_code = #{record.checkCode,jdbcType=VARCHAR},
      cost_limit = #{record.costLimit,jdbcType=INTEGER},
      day_limit = #{record.dayLimit,jdbcType=INTEGER},
      user_no = #{record.userNo,jdbcType=VARCHAR},
      count_id = #{record.countId,jdbcType=INTEGER}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="list" parameterType="top.iotequ.ewallet.pojo.EwUserCount" resultMap="BaseResultMap">
    <include refid="selectSql" />
     where 1=1 
        <if test="id != null"> and ew_user_count.id = #{id,jdbcType=INTEGER} </if>
        <if test="amountCount != null"> and ew_user_count.amount_count = #{amountCount,jdbcType=INTEGER} </if>
        <if test="checkCode != null"> and ew_user_count.check_code like #{checkCode,jdbcType=VARCHAR} </if>
        <if test="costLimit != null"> and ew_user_count.cost_limit = #{costLimit,jdbcType=INTEGER} </if>
        <if test="dayLimit != null"> and ew_user_count.day_limit = #{dayLimit,jdbcType=INTEGER} </if>
        <if test="userNo != null"> and ew_user_count.user_no like #{userNo,jdbcType=VARCHAR} </if>
        <if test="userName != null"> and ew_user.name like #{userName,jdbcType=VARCHAR} </if>
        <if test="memberGroup != null"> and ew_user.member_group like #{memberGroup,jdbcType=VARCHAR} </if>
        <if test="userIsActive != null"> and ew_user.is_active = #{userIsActive,jdbcType=TINYINT} </if>
        <if test="countId != null"> and ew_user_count.count_id = #{countId,jdbcType=INTEGER} </if>
        <if test="projectName != null"> and ew_count_project.name like #{projectName,jdbcType=VARCHAR} </if>
        <if test="basePrice != null"> and ew_count_project.base_price = #{basePrice,jdbcType=INTEGER} </if>
        <if test="startTime != null"> and ew_count_project.start_time = #{startTime,jdbcType=TIME} </if>
        <if test="endTime != null"> and ew_count_project.end_time = #{endTime,jdbcType=TIME} </if>
  </select>
  <select id="listBy" parameterType="map" resultMap="BaseResultMap">
    <include refid="selectSql" />
        <if test="whereString != null and whereString !=''"> where ${whereString} </if>
        <if test="orderString != null and orderString!=''"> order by ${orderString} </if>
  </select>
  <select id="query" parameterType="map" resultMap="BaseResultMap">
        ${sqlString}
  </select>
</mapper>
