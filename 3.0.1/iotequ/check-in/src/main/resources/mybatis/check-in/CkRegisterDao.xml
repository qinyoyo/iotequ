<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.iotequ.checkIn.dao.CkRegisterDao">
  <resultMap id="BaseResultMap" type="top.iotequ.checkIn.pojo.CkRegister">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="org_code" jdbcType="INTEGER" property="orgCode" />
    <result column="in_time" jdbcType="TIMESTAMP" property="inTime" />
    <result column="out_time" jdbcType="TIMESTAMP" property="outTime" />
    <result column="user_no" jdbcType="VARCHAR" property="userNo" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birth_date" jdbcType="DATE" property="birthDate" />
    <result column="on_time" jdbcType="VARCHAR" property="onTime" />
    <result column="off_time" jdbcType="VARCHAR" property="offTime" />
  </resultMap>
  <sql id = "selectSql">
     SELECT ck_register.id,ck_register.org_code,ck_register.in_time,ck_register.out_time,ck_register.user_no,dev_people.real_name AS real_name,dev_people.sex AS sex,dev_people.birth_date AS birth_date,in_time as on_time,out_time as off_time FROM ck_register LEFT JOIN dev_people ON ck_register.user_no = dev_people.user_no
  </sql>
  <insert id="insert" parameterType="top.iotequ.checkIn.pojo.CkRegister">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String" >
      SELECT replace(uuid(), '-', '')
    </selectKey>
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String" databaseId="SQLServer">
      SELECT replace(lower(newid()), '-', '')
    </selectKey>
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String" databaseId="Oracle">
      SELECT replace(lower(sys_guid()), '-', '') from dual
    </selectKey>
    insert into ck_register (id,org_code,in_time,out_time,user_no)
      values 
      (#{id,jdbcType=CHAR},#{orgCode,jdbcType=INTEGER},#{inTime,jdbcType=TIMESTAMP},#{outTime,jdbcType=TIMESTAMP},#{userNo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.checkIn.pojo.CkRegister">
    insert into ck_register (id,org_code,in_time,out_time,user_no)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (replace(uuid(), '-', ''),#{item.orgCode,jdbcType=INTEGER},#{item.inTime,jdbcType=TIMESTAMP},#{item.outTime,jdbcType=TIMESTAMP},#{item.userNo,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.checkIn.pojo.CkRegister" databaseId="SQLServer">
    insert into ck_register (id,org_code,in_time,out_time,user_no)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (replace(lower(newid()), '-', ''),#{item.orgCode,jdbcType=INTEGER},#{item.inTime,jdbcType=TIMESTAMP},#{item.outTime,jdbcType=TIMESTAMP},#{item.userNo,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.checkIn.pojo.CkRegister" databaseId="Oracle">
    insert all 
    <foreach collection="list" item="item" index="index">
      into ck_register (id,org_code,in_time,out_time,user_no) values(replace(lower(sys_guid()), '-', ''),#{item.orgCode,jdbcType=INTEGER},#{item.inTime,jdbcType=TIMESTAMP},#{item.outTime,jdbcType=TIMESTAMP},#{item.userNo,jdbcType=VARCHAR})
    </foreach>
    select 1 from dual
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.checkIn.pojo.CkRegister">
    insert into ck_register (id,org_code,in_time,out_time,user_no)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=CHAR},#{item.orgCode,jdbcType=INTEGER},#{item.inTime,jdbcType=TIMESTAMP},#{item.outTime,jdbcType=TIMESTAMP},#{item.userNo,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.checkIn.pojo.CkRegister" databaseId="Oracle">
    insert all 
    <foreach collection="list" item="item" index="index">
      into ck_register (id,org_code,in_time,out_time,user_no) values(#{item.id,jdbcType=CHAR},#{item.orgCode,jdbcType=INTEGER},#{item.inTime,jdbcType=TIMESTAMP},#{item.outTime,jdbcType=TIMESTAMP},#{item.userNo,jdbcType=VARCHAR})
    </foreach>
    select 1 from dual
  </insert>
  <select id="select" parameterType="java.lang.String" resultMap="BaseResultMap">
    <include refid="selectSql" /> where ck_register.id = #{id,jdbcType=CHAR}
  </select>
  <delete id="delete" parameterType="java.lang.String">
    delete from ck_register where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteBatch" parameterType="java.lang.String">
    delete from ck_register where id in     <foreach item="item" index="index" collection="_parameter.split(',')" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <select id="selectByOrgCode" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <include refid="selectSql" /> where ck_register.org_code = #{orgCode,jdbcType=INTEGER}
  </select>
  <delete id="deleteByOrgCode" parameterType="java.lang.Integer">
    delete from ck_register where org_code = #{orgCode,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBatchByOrgCode" parameterType="java.lang.String">
    delete from ck_register where org_code in (${_parameter})
  </delete>
  <select id="selectByUserNo" parameterType="java.lang.String" resultMap="BaseResultMap">
    <include refid="selectSql" /> where ck_register.user_no = #{userNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByUserNo" parameterType="java.lang.String">
    delete from ck_register where user_no = #{userNo,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteBatchByUserNo" parameterType="java.lang.String">
    delete from ck_register where user_no in     <foreach item="item" index="index" collection="_parameter.split(',')" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <delete id="deleteList" parameterType="java.util.List">
    delete from ck_register where id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
       #{item.id,jdbcType=CHAR}
    </foreach>
  </delete>
  <update id="update" parameterType="top.iotequ.checkIn.pojo.CkRegister">
    update ck_register set 
      org_code = #{orgCode,jdbcType=INTEGER},
      in_time = #{inTime,jdbcType=TIMESTAMP},
      out_time = #{outTime,jdbcType=TIMESTAMP},
      user_no = #{userNo,jdbcType=VARCHAR}
      where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateSelective" parameterType="java.util.Map">
    update ck_register 
      <set>
        <if test='orgCode_string_ == "[null]"'> org_code = NULL, </if>
        <if test='orgCode != null and orgCode_string_ != "[null]"'> org_code = #{orgCode,jdbcType=INTEGER},</if>
        <if test='inTime_string_ == "[null]"'> in_time = NULL, </if>
        <if test='inTime != null and inTime_string_ != "[null]"'> in_time = #{inTime,jdbcType=TIMESTAMP},</if>
        <if test='outTime_string_ == "[null]"'> out_time = NULL, </if>
        <if test='outTime != null and outTime_string_ != "[null]"'> out_time = #{outTime,jdbcType=TIMESTAMP},</if>
        <if test="userNo != null"> user_no = #{userNo,jdbcType=VARCHAR},</if>
      </set>
      where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateBy" parameterType="top.iotequ.checkIn.pojo.CkRegister">
    update ck_register set 
      id = #{record.id,jdbcType=CHAR},
      org_code = #{record.orgCode,jdbcType=INTEGER},
      in_time = #{record.inTime,jdbcType=TIMESTAMP},
      out_time = #{record.outTime,jdbcType=TIMESTAMP},
      user_no = #{record.userNo,jdbcType=VARCHAR}
      where id = #{id,jdbcType=CHAR}
  </update>
  <select id="list" parameterType="top.iotequ.checkIn.pojo.CkRegister" resultMap="BaseResultMap">
    <include refid="selectSql" />
     where 1=1 
        <if test="id != null"> and ck_register.id like #{id,jdbcType=CHAR} </if>
        <if test="orgCode != null"> and ck_register.org_code = #{orgCode,jdbcType=INTEGER} </if>
        <if test="inTime != null"> and ck_register.in_time like #{inTime,jdbcType=TIMESTAMP} </if>
        <if test="outTime != null"> and ck_register.out_time like #{outTime,jdbcType=TIMESTAMP} </if>
        <if test="userNo != null"> and ck_register.user_no like #{userNo,jdbcType=VARCHAR} </if>
        <if test="realName != null"> and dev_people.real_name like #{realName,jdbcType=VARCHAR} </if>
        <if test="sex != null"> and dev_people.sex like #{sex,jdbcType=VARCHAR} </if>
        <if test="birthDate != null"> and dev_people.birth_date = #{birthDate,jdbcType=DATE} </if>
  </select>
  <select id="listBy" parameterType="map" resultMap="BaseResultMap">
    <include refid="selectSql" />
        <if test="whereString != null and whereString !=''"> where ${whereString} </if>
        <if test="orderString != null and orderString!=''"> order by ${orderString} </if>
  </select>
  <select id="query" parameterType="map" resultMap="BaseResultMap">
        ${sqlString}
  </select>
</mapper>
