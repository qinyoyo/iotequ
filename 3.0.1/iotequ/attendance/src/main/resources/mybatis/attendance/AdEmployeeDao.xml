<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.iotequ.attendance.employee.dao.AdEmployeeDao">
  <resultMap id="BaseResultMap" type="top.iotequ.attendance.employee.pojo.AdEmployee">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="employee_no" jdbcType="VARCHAR" property="employeeNo" />
    <result column="em_level" jdbcType="INTEGER" property="emLevel" />
    <result column="is_attendance" jdbcType="TINYINT" property="isAttendance" />
    <result column="enter_date" jdbcType="DATE" property="enterDate" />
    <result column="leave_date" jdbcType="DATE" property="leaveDate" />
    <result column="overtime_minutes" jdbcType="INTEGER" property="overtimeMinutes" />
    <result column="shift_id" jdbcType="INTEGER" property="shiftId" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="org_code" jdbcType="INTEGER" property="orgCode" />
    <result column="birth_date" jdbcType="DATE" property="birthDate" />
  </resultMap>
  <sql id = "selectSql">
     SELECT sys_user.id AS id,ad_employee.employee_no,ad_employee.em_level,ad_employee.is_attendance,ad_employee.enter_date,ad_employee.leave_date,ad_employee.overtime_minutes,ad_employee.shift_id,sys_user.real_name AS real_name,sys_user.sex AS sex,sys_user.org_code AS org_code,sys_user.birth_date AS birth_date FROM ad_employee RIGHT JOIN sys_user ON ad_employee.id = sys_user.id
  </sql>
  <sql id = "realSelectSql">
     SELECT ad_employee.id,ad_employee.employee_no,ad_employee.em_level,ad_employee.is_attendance,ad_employee.enter_date,ad_employee.leave_date,ad_employee.overtime_minutes,ad_employee.shift_id,sys_user.real_name AS real_name,sys_user.sex AS sex,sys_user.org_code AS org_code,sys_user.birth_date AS birth_date FROM ad_employee RIGHT JOIN sys_user ON ad_employee.id = sys_user.id
  </sql>
  <insert id="insert" parameterType="top.iotequ.attendance.employee.pojo.AdEmployee">
    insert into ad_employee (id,employee_no,em_level,is_attendance,enter_date,leave_date,overtime_minutes,shift_id)
      values 
      (#{id,jdbcType=VARCHAR},#{employeeNo,jdbcType=VARCHAR},#{emLevel,jdbcType=INTEGER},#{isAttendance,jdbcType=TINYINT},#{enterDate,jdbcType=DATE},#{leaveDate,jdbcType=DATE},#{overtimeMinutes,jdbcType=INTEGER},#{shiftId,jdbcType=INTEGER})
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.attendance.employee.pojo.AdEmployee">
    insert into ad_employee (id,employee_no,em_level,is_attendance,enter_date,leave_date,overtime_minutes,shift_id)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=VARCHAR},#{item.employeeNo,jdbcType=VARCHAR},#{item.emLevel,jdbcType=INTEGER},#{item.isAttendance,jdbcType=TINYINT},#{item.enterDate,jdbcType=DATE},#{item.leaveDate,jdbcType=DATE},#{item.overtimeMinutes,jdbcType=INTEGER},#{item.shiftId,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.attendance.employee.pojo.AdEmployee" databaseId="Oracle">
    insert all 
    <foreach collection="list" item="item" index="index">
      into ad_employee (id,employee_no,em_level,is_attendance,enter_date,leave_date,overtime_minutes,shift_id) values(#{item.id,jdbcType=VARCHAR},#{item.employeeNo,jdbcType=VARCHAR},#{item.emLevel,jdbcType=INTEGER},#{item.isAttendance,jdbcType=TINYINT},#{item.enterDate,jdbcType=DATE},#{item.leaveDate,jdbcType=DATE},#{item.overtimeMinutes,jdbcType=INTEGER},#{item.shiftId,jdbcType=INTEGER})
    </foreach>
    select 1 from dual
  </insert>
  <select id="selectByEmployeeNo" parameterType="java.lang.String" resultMap="BaseResultMap">
    <include refid="selectSql" /> where ad_employee.employee_no = #{employeeNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByEmployeeNo" parameterType="java.lang.String">
    delete from ad_employee where employee_no = #{employeeNo,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteBatchByEmployeeNo" parameterType="java.lang.String">
    delete from ad_employee where employee_no in     <foreach item="item" index="index" collection="_parameter.split(',')" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <select id="select" parameterType="java.lang.String" resultMap="BaseResultMap">
    <include refid="selectSql" /> where sys_user.id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="realSelect" parameterType="java.lang.String" resultMap="BaseResultMap">
    <include refid="realSelectSql" /> where ad_employee.id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="delete" parameterType="java.lang.String">
    delete from ad_employee where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteBatch" parameterType="java.lang.String">
    delete from ad_employee where id in     <foreach item="item" index="index" collection="_parameter.split(',')" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <delete id="deleteList" parameterType="java.util.List">
    delete from ad_employee where id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
       #{item.id,jdbcType=VARCHAR}
    </foreach>
  </delete>
  <update id="update" parameterType="top.iotequ.attendance.employee.pojo.AdEmployee">
    update ad_employee set 
      employee_no = #{employeeNo,jdbcType=VARCHAR},
      em_level = #{emLevel,jdbcType=INTEGER},
      is_attendance = #{isAttendance,jdbcType=TINYINT},
      enter_date = #{enterDate,jdbcType=DATE},
      leave_date = #{leaveDate,jdbcType=DATE},
      overtime_minutes = #{overtimeMinutes,jdbcType=INTEGER},
      shift_id = #{shiftId,jdbcType=INTEGER}
      where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateSelective" parameterType="top.iotequ.attendance.employee.pojo.AdEmployee">
    update ad_employee 
      <set>
        <if test="employeeNo != null"> employee_no = #{employeeNo,jdbcType=VARCHAR},</if>
        <if test="emLevel != null"> em_level = #{emLevel,jdbcType=INTEGER},</if>
        <if test="isAttendance != null"> is_attendance = #{isAttendance,jdbcType=TINYINT},</if>
        <if test="enterDate != null"> enter_date = #{enterDate,jdbcType=DATE},</if>
        <if test="leaveDate != null"> leave_date = #{leaveDate,jdbcType=DATE},</if>
        <if test="overtimeMinutes != null"> overtime_minutes = #{overtimeMinutes,jdbcType=INTEGER},</if>
        <if test="shiftId != null"> shift_id = #{shiftId,jdbcType=INTEGER},</if>
      </set>
      where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateBy" parameterType="top.iotequ.attendance.employee.pojo.AdEmployee">
    update ad_employee set 
      employee_no = #{record.employeeNo,jdbcType=VARCHAR},
      em_level = #{record.emLevel,jdbcType=INTEGER},
      is_attendance = #{record.isAttendance,jdbcType=TINYINT},
      enter_date = #{record.enterDate,jdbcType=DATE},
      leave_date = #{record.leaveDate,jdbcType=DATE},
      overtime_minutes = #{record.overtimeMinutes,jdbcType=INTEGER},
      shift_id = #{record.shiftId,jdbcType=INTEGER},
      id = #{record.id,jdbcType=VARCHAR}
      where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="list" parameterType="top.iotequ.attendance.employee.pojo.AdEmployee" resultMap="BaseResultMap">
    <include refid="selectSql" />
     where 1=1 
        <if test="employeeNo != null"> and ad_employee.employee_no like #{employeeNo,jdbcType=VARCHAR} </if>
        <if test="emLevel != null"> and ad_employee.em_level = #{emLevel,jdbcType=INTEGER} </if>
        <if test="isAttendance != null"> and ad_employee.is_attendance = #{isAttendance,jdbcType=TINYINT} </if>
        <if test="enterDate != null"> and ad_employee.enter_date like #{enterDate,jdbcType=DATE} </if>
        <if test="leaveDate != null"> and ad_employee.leave_date like #{leaveDate,jdbcType=DATE} </if>
        <if test="overtimeMinutes != null"> and ad_employee.overtime_minutes = #{overtimeMinutes,jdbcType=INTEGER} </if>
        <if test="shiftId != null"> and ad_employee.shift_id = #{shiftId,jdbcType=INTEGER} </if>
        <if test="id != null"> and sys_user.id like #{id,jdbcType=VARCHAR} </if>
        <if test="realName != null"> and sys_user.real_name like #{realName,jdbcType=VARCHAR} </if>
        <if test="sex != null"> and sys_user.sex like #{sex,jdbcType=VARCHAR} </if>
        <if test="orgCode != null"> and sys_user.org_code = #{orgCode,jdbcType=INTEGER} </if>
        <if test="birthDate != null"> and sys_user.birth_date = #{birthDate,jdbcType=DATE} </if>
  </select>
  <select id="listBy" parameterType="map" resultMap="BaseResultMap">
    <include refid="selectSql" />
        <if test="whereString != null and whereString !=''"> where ${whereString} </if>
        <if test="orderString != null and orderString!=''"> order by ${orderString} </if>
  </select>
  <select id="query" parameterType="map" resultMap="BaseResultMap">
        ${sqlString}
  </select>
</mapper>
