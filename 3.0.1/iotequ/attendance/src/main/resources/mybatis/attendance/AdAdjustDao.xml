<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.iotequ.attendance.adjust.dao.AdAdjustDao">
  <resultMap id="BaseResultMap" type="top.iotequ.attendance.adjust.pojo.AdAdjust">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="org_code" jdbcType="INTEGER" property="orgCode" />
    <result column="adjust_type" jdbcType="INTEGER" property="adjustType" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="register_time" jdbcType="TIMESTAMP" property="registerTime" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="approve_org" jdbcType="INTEGER" property="approveOrg" />
    <result column="add_file" jdbcType="VARCHAR" property="addFile" />
    <result column="employee" jdbcType="VARCHAR" property="employee" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="hr" jdbcType="VARCHAR" property="hr" />
    <result column="hr_real_name" jdbcType="VARCHAR" property="hrRealName" />
    <result column="approver" jdbcType="VARCHAR" property="approver" />
    <result column="approver_name" jdbcType="VARCHAR" property="approverName" />
  </resultMap>
  <sql id = "selectSql">
     SELECT ad_adjust.id,ad_adjust.org_code,ad_adjust.adjust_type,ad_adjust.state,ad_adjust.register_time,ad_adjust.start_time,ad_adjust.end_time,ad_adjust.description,ad_adjust.approve_org,ad_adjust.add_file,ad_adjust.employee,sys_user.real_name AS real_name,ad_adjust.hr,sys_user1.real_name AS hr_real_name,ad_adjust.approver,sys_user2.real_name AS approver_name FROM ad_adjust LEFT JOIN sys_user ON ad_adjust.employee = sys_user.id LEFT JOIN sys_user sys_user1 ON ad_adjust.hr = sys_user1.id LEFT JOIN sys_user sys_user2 ON ad_adjust.approver = sys_user2.id
  </sql>
  <insert id="insert" parameterType="top.iotequ.attendance.adjust.pojo.AdAdjust">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String" >
      SELECT replace(uuid(), '-', '')
    </selectKey>
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String" databaseId="SQLServer">
      SELECT replace(lower(newid()), '-', '')
    </selectKey>
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String" databaseId="Oracle">
      SELECT replace(lower(sys_guid()), '-', '') from dual
    </selectKey>
    insert into ad_adjust (id,org_code,adjust_type,state,register_time,start_time,end_time,description,approve_org,add_file,employee,hr,approver)
      values 
      (#{id,jdbcType=CHAR},#{orgCode,jdbcType=INTEGER},#{adjustType,jdbcType=INTEGER},#{state,jdbcType=INTEGER},#{registerTime,jdbcType=TIMESTAMP},#{startTime,jdbcType=TIMESTAMP},#{endTime,jdbcType=TIMESTAMP},#{description,jdbcType=VARCHAR},#{approveOrg,jdbcType=INTEGER},#{addFile,jdbcType=VARCHAR},#{employee,jdbcType=VARCHAR},#{hr,jdbcType=VARCHAR},#{approver,jdbcType=VARCHAR})
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.attendance.adjust.pojo.AdAdjust">
    insert into ad_adjust (id,org_code,adjust_type,state,register_time,start_time,end_time,description,approve_org,add_file,employee,hr,approver)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (replace(uuid(), '-', ''),#{item.orgCode,jdbcType=INTEGER},#{item.adjustType,jdbcType=INTEGER},#{item.state,jdbcType=INTEGER},#{item.registerTime,jdbcType=TIMESTAMP},#{item.startTime,jdbcType=TIMESTAMP},#{item.endTime,jdbcType=TIMESTAMP},#{item.description,jdbcType=VARCHAR},#{item.approveOrg,jdbcType=INTEGER},#{item.addFile,jdbcType=VARCHAR},#{item.employee,jdbcType=VARCHAR},#{item.hr,jdbcType=VARCHAR},#{item.approver,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.attendance.adjust.pojo.AdAdjust" databaseId="SQLServer">
    insert into ad_adjust (id,org_code,adjust_type,state,register_time,start_time,end_time,description,approve_org,add_file,employee,hr,approver)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (replace(lower(newid()), '-', ''),#{item.orgCode,jdbcType=INTEGER},#{item.adjustType,jdbcType=INTEGER},#{item.state,jdbcType=INTEGER},#{item.registerTime,jdbcType=TIMESTAMP},#{item.startTime,jdbcType=TIMESTAMP},#{item.endTime,jdbcType=TIMESTAMP},#{item.description,jdbcType=VARCHAR},#{item.approveOrg,jdbcType=INTEGER},#{item.addFile,jdbcType=VARCHAR},#{item.employee,jdbcType=VARCHAR},#{item.hr,jdbcType=VARCHAR},#{item.approver,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.attendance.adjust.pojo.AdAdjust" databaseId="Oracle">
    insert all 
    <foreach collection="list" item="item" index="index">
      into ad_adjust (id,org_code,adjust_type,state,register_time,start_time,end_time,description,approve_org,add_file,employee,hr,approver) values(replace(lower(sys_guid()), '-', ''),#{item.orgCode,jdbcType=INTEGER},#{item.adjustType,jdbcType=INTEGER},#{item.state,jdbcType=INTEGER},#{item.registerTime,jdbcType=TIMESTAMP},#{item.startTime,jdbcType=TIMESTAMP},#{item.endTime,jdbcType=TIMESTAMP},#{item.description,jdbcType=VARCHAR},#{item.approveOrg,jdbcType=INTEGER},#{item.addFile,jdbcType=VARCHAR},#{item.employee,jdbcType=VARCHAR},#{item.hr,jdbcType=VARCHAR},#{item.approver,jdbcType=VARCHAR})
    </foreach>
    select 1 from dual
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.attendance.adjust.pojo.AdAdjust">
    insert into ad_adjust (id,org_code,adjust_type,state,register_time,start_time,end_time,description,approve_org,add_file,employee,hr,approver)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=CHAR},#{item.orgCode,jdbcType=INTEGER},#{item.adjustType,jdbcType=INTEGER},#{item.state,jdbcType=INTEGER},#{item.registerTime,jdbcType=TIMESTAMP},#{item.startTime,jdbcType=TIMESTAMP},#{item.endTime,jdbcType=TIMESTAMP},#{item.description,jdbcType=VARCHAR},#{item.approveOrg,jdbcType=INTEGER},#{item.addFile,jdbcType=VARCHAR},#{item.employee,jdbcType=VARCHAR},#{item.hr,jdbcType=VARCHAR},#{item.approver,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.attendance.adjust.pojo.AdAdjust" databaseId="Oracle">
    insert all 
    <foreach collection="list" item="item" index="index">
      into ad_adjust (id,org_code,adjust_type,state,register_time,start_time,end_time,description,approve_org,add_file,employee,hr,approver) values(#{item.id,jdbcType=CHAR},#{item.orgCode,jdbcType=INTEGER},#{item.adjustType,jdbcType=INTEGER},#{item.state,jdbcType=INTEGER},#{item.registerTime,jdbcType=TIMESTAMP},#{item.startTime,jdbcType=TIMESTAMP},#{item.endTime,jdbcType=TIMESTAMP},#{item.description,jdbcType=VARCHAR},#{item.approveOrg,jdbcType=INTEGER},#{item.addFile,jdbcType=VARCHAR},#{item.employee,jdbcType=VARCHAR},#{item.hr,jdbcType=VARCHAR},#{item.approver,jdbcType=VARCHAR})
    </foreach>
    select 1 from dual
  </insert>
  <select id="select" parameterType="java.lang.String" resultMap="BaseResultMap">
    <include refid="selectSql" /> where ad_adjust.id = #{id,jdbcType=CHAR}
  </select>
  <delete id="delete" parameterType="java.lang.String">
    delete from ad_adjust where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteBatch" parameterType="java.lang.String">
    delete from ad_adjust where id in     <foreach item="item" index="index" collection="_parameter.split(',')" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <delete id="deleteList" parameterType="java.util.List">
    delete from ad_adjust where id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
       #{item.id,jdbcType=CHAR}
    </foreach>
  </delete>
  <update id="update" parameterType="top.iotequ.attendance.adjust.pojo.AdAdjust">
    update ad_adjust set 
      org_code = #{orgCode,jdbcType=INTEGER},
      adjust_type = #{adjustType,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      approve_org = #{approveOrg,jdbcType=INTEGER},
      add_file = #{addFile,jdbcType=VARCHAR},
      employee = #{employee,jdbcType=VARCHAR},
      hr = #{hr,jdbcType=VARCHAR},
      approver = #{approver,jdbcType=VARCHAR}
      where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateSelective" parameterType="java.util.Map">
    update ad_adjust 
      <set>
        <if test='orgCode_string_ == "[null]"'> org_code = NULL, </if>
        <if test='orgCode != null and orgCode_string_ != "[null]"'> org_code = #{orgCode,jdbcType=INTEGER},</if>
        <if test='adjustType_string_ == "[null]"'> adjust_type = NULL, </if>
        <if test='adjustType != null and adjustType_string_ != "[null]"'> adjust_type = #{adjustType,jdbcType=INTEGER},</if>
        <if test='state_string_ == "[null]"'> state = NULL, </if>
        <if test='state != null and state_string_ != "[null]"'> state = #{state,jdbcType=INTEGER},</if>
        <if test='registerTime_string_ == "[null]"'> register_time = NULL, </if>
        <if test='registerTime != null and registerTime_string_ != "[null]"'> register_time = #{registerTime,jdbcType=TIMESTAMP},</if>
        <if test='startTime_string_ == "[null]"'> start_time = NULL, </if>
        <if test='startTime != null and startTime_string_ != "[null]"'> start_time = #{startTime,jdbcType=TIMESTAMP},</if>
        <if test='endTime_string_ == "[null]"'> end_time = NULL, </if>
        <if test='endTime != null and endTime_string_ != "[null]"'> end_time = #{endTime,jdbcType=TIMESTAMP},</if>
        <if test='description_string_ == "[null]"'> description = NULL, </if>
        <if test='description != null and description_string_ != "[null]"'> description = #{description,jdbcType=VARCHAR},</if>
        <if test='approveOrg_string_ == "[null]"'> approve_org = NULL, </if>
        <if test='approveOrg != null and approveOrg_string_ != "[null]"'> approve_org = #{approveOrg,jdbcType=INTEGER},</if>
        <if test='addFile_string_ == "[null]"'> add_file = NULL, </if>
        <if test='addFile != null and addFile_string_ != "[null]"'> add_file = #{addFile,jdbcType=VARCHAR},</if>
        <if test="employee != null"> employee = #{employee,jdbcType=VARCHAR},</if>
        <if test="hr != null"> hr = #{hr,jdbcType=VARCHAR},</if>
        <if test="approver != null"> approver = #{approver,jdbcType=VARCHAR},</if>
      </set>
      where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateBy" parameterType="top.iotequ.attendance.adjust.pojo.AdAdjust">
    update ad_adjust set 
      id = #{record.id,jdbcType=CHAR},
      org_code = #{record.orgCode,jdbcType=INTEGER},
      adjust_type = #{record.adjustType,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=VARCHAR},
      approve_org = #{record.approveOrg,jdbcType=INTEGER},
      add_file = #{record.addFile,jdbcType=VARCHAR},
      employee = #{record.employee,jdbcType=VARCHAR},
      hr = #{record.hr,jdbcType=VARCHAR},
      approver = #{record.approver,jdbcType=VARCHAR}
      where id = #{id,jdbcType=CHAR}
  </update>
  <select id="list" parameterType="top.iotequ.attendance.adjust.pojo.AdAdjust" resultMap="BaseResultMap">
    <include refid="selectSql" />
     where 1=1 
        <if test="id != null"> and ad_adjust.id like #{id,jdbcType=CHAR} </if>
        <if test="orgCode != null"> and ad_adjust.org_code = #{orgCode,jdbcType=INTEGER} </if>
        <if test="adjustType != null"> and ad_adjust.adjust_type = #{adjustType,jdbcType=INTEGER} </if>
        <if test="state != null"> and ad_adjust.state = #{state,jdbcType=INTEGER} </if>
        <if test="registerTime != null"> and ad_adjust.register_time like #{registerTime,jdbcType=TIMESTAMP} </if>
        <if test="startTime != null"> and ad_adjust.start_time like #{startTime,jdbcType=TIMESTAMP} </if>
        <if test="endTime != null"> and ad_adjust.end_time like #{endTime,jdbcType=TIMESTAMP} </if>
        <if test="description != null"> and ad_adjust.description like #{description,jdbcType=VARCHAR} </if>
        <if test="approveOrg != null"> and ad_adjust.approve_org = #{approveOrg,jdbcType=INTEGER} </if>
        <if test="addFile != null"> and ad_adjust.add_file like #{addFile,jdbcType=VARCHAR} </if>
        <if test="employee != null"> and ad_adjust.employee like #{employee,jdbcType=VARCHAR} </if>
        <if test="realName != null"> and sys_user.real_name like #{realName,jdbcType=VARCHAR} </if>
        <if test="hr != null"> and ad_adjust.hr like #{hr,jdbcType=VARCHAR} </if>
        <if test="hrRealName != null"> and sys_user1.real_name like #{hrRealName,jdbcType=VARCHAR} </if>
        <if test="approver != null"> and ad_adjust.approver like #{approver,jdbcType=VARCHAR} </if>
        <if test="approverName != null"> and sys_user2.real_name like #{approverName,jdbcType=VARCHAR} </if>
  </select>
  <select id="listBy" parameterType="map" resultMap="BaseResultMap">
    <include refid="selectSql" />
        <if test="whereString != null and whereString !=''"> where ${whereString} </if>
        <if test="orderString != null and orderString!=''"> order by ${orderString} </if>
  </select>
  <select id="query" parameterType="map" resultMap="BaseResultMap">
        ${sqlString}
  </select>
</mapper>
