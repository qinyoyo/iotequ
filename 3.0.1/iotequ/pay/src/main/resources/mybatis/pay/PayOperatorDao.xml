<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.iotequ.pay.dao.PayOperatorDao">
  <resultMap id="BaseResultMap" type="top.iotequ.pay.pojo.PayOperator">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="shop_id" jdbcType="INTEGER" property="shopId" />
    <result column="user_no" jdbcType="VARCHAR" property="userNo" />
  </resultMap>
  <sql id = "selectSql">
     SELECT id,name,real_name,password,shop_id,user_no FROM pay_operator
  </sql>
  <insert id="insert" parameterType="top.iotequ.pay.pojo.PayOperator">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" databaseId="SQLServer">
      SELECT @@IDENTITY
    </selectKey>
    insert into pay_operator (name,real_name,password,shop_id,user_no)
      values 
      (#{name,jdbcType=VARCHAR},#{realName,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},#{shopId,jdbcType=INTEGER},#{userNo,jdbcType=VARCHAR})
  </insert>
  <insert id="insert" parameterType="top.iotequ.pay.pojo.PayOperator" databaseId="Oracle">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer" >
      SELECT SEQUENCE_PAY_OPERATOR.nextval from DUAL
    </selectKey>
    insert into pay_operator (id,name,real_name,password,shop_id,user_no)
      values 
      (#{id,jdbcType=INTEGER},#{name,jdbcType=VARCHAR},#{realName,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},#{shopId,jdbcType=INTEGER},#{userNo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.pay.pojo.PayOperator">
    insert into pay_operator (name,real_name,password,shop_id,user_no)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.name,jdbcType=VARCHAR},#{item.realName,jdbcType=VARCHAR},#{item.password,jdbcType=VARCHAR},#{item.shopId,jdbcType=INTEGER},#{item.userNo,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.pay.pojo.PayOperator" databaseId="Oracle">
     insert into pay_operator (id,name,real_name,password,shop_id,user_no)
       select SEQUENCE_PAY_OPERATOR.nextval,cd.* from(
          <foreach collection="list" item="item" index="index" separator="union all">
             select #{item.name,jdbcType=VARCHAR},#{item.realName,jdbcType=VARCHAR},#{item.password,jdbcType=VARCHAR},#{item.shopId,jdbcType=INTEGER},#{item.userNo,jdbcType=VARCHAR} from dual
          </foreach>
       ) cd
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.pay.pojo.PayOperator">
    insert into pay_operator (id,name,real_name,password,shop_id,user_no)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.name,jdbcType=VARCHAR},#{item.realName,jdbcType=VARCHAR},#{item.password,jdbcType=VARCHAR},#{item.shopId,jdbcType=INTEGER},#{item.userNo,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.pay.pojo.PayOperator" databaseId="SQLServer">
    set IDENTITY_INSERT pay_operator ON 
    insert into pay_operator (id,name,real_name,password,shop_id,user_no)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.name,jdbcType=VARCHAR},#{item.realName,jdbcType=VARCHAR},#{item.password,jdbcType=VARCHAR},#{item.shopId,jdbcType=INTEGER},#{item.userNo,jdbcType=VARCHAR})
    </foreach>
    set IDENTITY_INSERT pay_operator OFF 
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.pay.pojo.PayOperator" databaseId="Oracle">
    insert all 
    <foreach collection="list" item="item" index="index">
      into pay_operator (id,name,real_name,password,shop_id,user_no) values(#{item.id,jdbcType=INTEGER},#{item.name,jdbcType=VARCHAR},#{item.realName,jdbcType=VARCHAR},#{item.password,jdbcType=VARCHAR},#{item.shopId,jdbcType=INTEGER},#{item.userNo,jdbcType=VARCHAR})
    </foreach>
    select 1 from dual
  </insert>
  <select id="select" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <include refid="selectSql" /> where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from pay_operator where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBatch" parameterType="java.lang.String">
    delete from pay_operator where id in (${_parameter})
  </delete>
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    <include refid="selectSql" /> where name = #{name,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByName" parameterType="java.lang.String">
    delete from pay_operator where name = #{name,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteBatchByName" parameterType="java.lang.String">
    delete from pay_operator where name in     <foreach item="item" index="index" collection="_parameter.split(',')" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <select id="selectByUserNo" parameterType="java.lang.String" resultMap="BaseResultMap">
    <include refid="selectSql" /> where user_no = #{userNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByUserNo" parameterType="java.lang.String">
    delete from pay_operator where user_no = #{userNo,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteBatchByUserNo" parameterType="java.lang.String">
    delete from pay_operator where user_no in     <foreach item="item" index="index" collection="_parameter.split(',')" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <delete id="deleteList" parameterType="java.util.List">
    delete from pay_operator where id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
       #{item.id,jdbcType=INTEGER}
    </foreach>
  </delete>
  <update id="update" parameterType="top.iotequ.pay.pojo.PayOperator">
    update pay_operator set 
      name = #{name,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      shop_id = #{shopId,jdbcType=INTEGER},
      user_no = #{userNo,jdbcType=VARCHAR}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateSelective" parameterType="top.iotequ.pay.pojo.PayOperator">
    update pay_operator 
      <set>
        <if test="name != null"> name = #{name,jdbcType=VARCHAR},</if>
        <if test="realName != null"> real_name = #{realName,jdbcType=VARCHAR},</if>
        <if test="password != null"> password = #{password,jdbcType=VARCHAR},</if>
        <if test="shopId != null"> shop_id = #{shopId,jdbcType=INTEGER},</if>
        <if test="userNo != null"> user_no = #{userNo,jdbcType=VARCHAR},</if>
      </set>
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBy" parameterType="top.iotequ.pay.pojo.PayOperator">
    update pay_operator set 
      id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      shop_id = #{record.shopId,jdbcType=INTEGER},
      user_no = #{record.userNo,jdbcType=VARCHAR}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="list" parameterType="top.iotequ.pay.pojo.PayOperator" resultMap="BaseResultMap">
    <include refid="selectSql" />
     where 1=1 
        <if test="id != null"> and id = #{id,jdbcType=INTEGER} </if>
        <if test="name != null"> and name like #{name,jdbcType=VARCHAR} </if>
        <if test="realName != null"> and real_name like #{realName,jdbcType=VARCHAR} </if>
        <if test="password != null"> and password like #{password,jdbcType=VARCHAR} </if>
        <if test="shopId != null"> and shop_id = #{shopId,jdbcType=INTEGER} </if>
        <if test="userNo != null"> and user_no like #{userNo,jdbcType=VARCHAR} </if>
  </select>
  <select id="listBy" parameterType="map" resultMap="BaseResultMap">
    <include refid="selectSql" />
        <if test="whereString != null and whereString !=''"> where ${whereString} </if>
        <if test="orderString != null and orderString!=''"> order by ${orderString} </if>
  </select>
  <select id="query" parameterType="map" resultMap="BaseResultMap">
        ${sqlString}
  </select>
</mapper>
