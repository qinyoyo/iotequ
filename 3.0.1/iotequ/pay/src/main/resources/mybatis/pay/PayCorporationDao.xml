<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.iotequ.pay.dao.PayCorporationDao">
  <resultMap id="BaseResultMap" type="top.iotequ.pay.pojo.PayCorporation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="linkman" jdbcType="VARCHAR" property="linkman" />
    <result column="linkphone" jdbcType="VARCHAR" property="linkphone" />
  </resultMap>
  <sql id = "selectSql">
     SELECT id,parent_id,name,address,linkman,linkphone FROM pay_corporation
  </sql>
  <resultMap id="TreeResultMap" type="top.iotequ.pay.pojo.PayCorporation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="linkman" jdbcType="VARCHAR" property="linkman" />
    <result column="linkphone" jdbcType="VARCHAR" property="linkphone" />
    <collection column="id" property="children" ofType="top.iotequ.pay.pojo.PayCorporation" javaType="java.util.ArrayList" select="selectChildrenById"/>
  </resultMap>
  <select id="selectChildrenById" resultMap="TreeResultMap">
		<include refid="selectSql" />  WHERE  parent_id = #{id}
  </select>
  <select id="selectTree" parameterType="java.lang.Integer" resultMap="TreeResultMap">
		<include refid="selectSql" /> where 
		<choose>
			<when test="id == null">parent_id = 0 or parent_id is null </when>
			<otherwise>parent_id = #{id,jdbcType=INTEGER} </otherwise>
		</choose>
	</select>
  <insert id="insert" parameterType="top.iotequ.pay.pojo.PayCorporation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" databaseId="SQLServer">
      SELECT @@IDENTITY
    </selectKey>
    insert into pay_corporation (parent_id,name,address,linkman,linkphone)
      values 
      (#{parentId,jdbcType=INTEGER},#{name,jdbcType=VARCHAR},#{address,jdbcType=VARCHAR},#{linkman,jdbcType=VARCHAR},#{linkphone,jdbcType=VARCHAR})
  </insert>
  <insert id="insert" parameterType="top.iotequ.pay.pojo.PayCorporation" databaseId="Oracle">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer" >
      SELECT SEQUENCE_PAY_CORPORATION.nextval from DUAL
    </selectKey>
    insert into pay_corporation (id,parent_id,name,address,linkman,linkphone)
      values 
      (#{id,jdbcType=INTEGER},#{parentId,jdbcType=INTEGER},#{name,jdbcType=VARCHAR},#{address,jdbcType=VARCHAR},#{linkman,jdbcType=VARCHAR},#{linkphone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.pay.pojo.PayCorporation">
    insert into pay_corporation (parent_id,name,address,linkman,linkphone)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.parentId,jdbcType=INTEGER},#{item.name,jdbcType=VARCHAR},#{item.address,jdbcType=VARCHAR},#{item.linkman,jdbcType=VARCHAR},#{item.linkphone,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.pay.pojo.PayCorporation" databaseId="Oracle">
     insert into pay_corporation (id,parent_id,name,address,linkman,linkphone)
       select SEQUENCE_PAY_CORPORATION.nextval,cd.* from(
          <foreach collection="list" item="item" index="index" separator="union all">
             select #{item.parentId,jdbcType=INTEGER},#{item.name,jdbcType=VARCHAR},#{item.address,jdbcType=VARCHAR},#{item.linkman,jdbcType=VARCHAR},#{item.linkphone,jdbcType=VARCHAR} from dual
          </foreach>
       ) cd
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.pay.pojo.PayCorporation">
    insert into pay_corporation (id,parent_id,name,address,linkman,linkphone)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.parentId,jdbcType=INTEGER},#{item.name,jdbcType=VARCHAR},#{item.address,jdbcType=VARCHAR},#{item.linkman,jdbcType=VARCHAR},#{item.linkphone,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.pay.pojo.PayCorporation" databaseId="SQLServer">
    set IDENTITY_INSERT pay_corporation ON 
    insert into pay_corporation (id,parent_id,name,address,linkman,linkphone)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.parentId,jdbcType=INTEGER},#{item.name,jdbcType=VARCHAR},#{item.address,jdbcType=VARCHAR},#{item.linkman,jdbcType=VARCHAR},#{item.linkphone,jdbcType=VARCHAR})
    </foreach>
    set IDENTITY_INSERT pay_corporation OFF 
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.pay.pojo.PayCorporation" databaseId="Oracle">
    insert all 
    <foreach collection="list" item="item" index="index">
      into pay_corporation (id,parent_id,name,address,linkman,linkphone) values(#{item.id,jdbcType=INTEGER},#{item.parentId,jdbcType=INTEGER},#{item.name,jdbcType=VARCHAR},#{item.address,jdbcType=VARCHAR},#{item.linkman,jdbcType=VARCHAR},#{item.linkphone,jdbcType=VARCHAR})
    </foreach>
    select 1 from dual
  </insert>
  <select id="select" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <include refid="selectSql" /> where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from pay_corporation where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBatch" parameterType="java.lang.String">
    delete from pay_corporation where id in (${_parameter})
  </delete>
  <delete id="deleteList" parameterType="java.util.List">
    delete from pay_corporation where id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
       #{item.id,jdbcType=INTEGER}
    </foreach>
  </delete>
  <update id="update" parameterType="top.iotequ.pay.pojo.PayCorporation">
    update pay_corporation set 
      parent_id = #{parentId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      linkman = #{linkman,jdbcType=VARCHAR},
      linkphone = #{linkphone,jdbcType=VARCHAR}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateSelective" parameterType="java.util.Map">
    update pay_corporation 
      <set>
        <if test='parentId == "[null]"'> parent_id = NULL, </if>
        <if test='parentId != null and parentId != "[null]"'> parent_id = #{parentId,jdbcType=INTEGER},</if>
        <if test='name == "[null]"'> name = NULL, </if>
        <if test='name != null and name != "[null]"'> name = #{name,jdbcType=VARCHAR},</if>
        <if test='address == "[null]"'> address = NULL, </if>
        <if test='address != null and address != "[null]"'> address = #{address,jdbcType=VARCHAR},</if>
        <if test='linkman == "[null]"'> linkman = NULL, </if>
        <if test='linkman != null and linkman != "[null]"'> linkman = #{linkman,jdbcType=VARCHAR},</if>
        <if test='linkphone == "[null]"'> linkphone = NULL, </if>
        <if test='linkphone != null and linkphone != "[null]"'> linkphone = #{linkphone,jdbcType=VARCHAR},</if>
      </set>
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBy" parameterType="top.iotequ.pay.pojo.PayCorporation">
    update pay_corporation set 
      id = #{record.id,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      linkman = #{record.linkman,jdbcType=VARCHAR},
      linkphone = #{record.linkphone,jdbcType=VARCHAR}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="list" parameterType="top.iotequ.pay.pojo.PayCorporation" resultMap="BaseResultMap">
    <include refid="selectSql" />
     where 1=1 
        <if test="id != null"> and id = #{id,jdbcType=INTEGER} </if>
        <if test="parentId != null"> and parent_id = #{parentId,jdbcType=INTEGER} </if>
        <if test="name != null"> and name like #{name,jdbcType=VARCHAR} </if>
        <if test="address != null"> and address like #{address,jdbcType=VARCHAR} </if>
        <if test="linkman != null"> and linkman like #{linkman,jdbcType=VARCHAR} </if>
        <if test="linkphone != null"> and linkphone like #{linkphone,jdbcType=VARCHAR} </if>
  </select>
  <select id="listBy" parameterType="map" resultMap="BaseResultMap">
    <include refid="selectSql" />
        <if test="whereString != null and whereString !=''"> where ${whereString} </if>
        <if test="orderString != null and orderString!=''"> order by ${orderString} </if>
  </select>
  <select id="query" parameterType="map" resultMap="BaseResultMap">
        ${sqlString}
  </select>
</mapper>
