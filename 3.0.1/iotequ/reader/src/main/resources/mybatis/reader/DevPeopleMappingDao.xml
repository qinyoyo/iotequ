<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.iotequ.reader.dao.DevPeopleMappingDao">
  <resultMap id="BaseResultMap" type="top.iotequ.reader.pojo.DevPeopleMapping">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="reader_no" jdbcType="VARCHAR" property="readerNo" />
    <result column="user_no" jdbcType="VARCHAR" property="userNo" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id = "selectSql">
     SELECT id,reader_no,user_no,status FROM dev_people_mapping
  </sql>
  <insert id="insert" parameterType="top.iotequ.reader.pojo.DevPeopleMapping">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" databaseId="SQLServer">
      SELECT @@IDENTITY
    </selectKey>
    insert into dev_people_mapping (reader_no,user_no,status)
      values 
      (#{readerNo,jdbcType=VARCHAR},#{userNo,jdbcType=VARCHAR},#{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insert" parameterType="top.iotequ.reader.pojo.DevPeopleMapping" databaseId="Oracle">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer" >
      SELECT SEQUENCE_DEV_PEOPLE_MAPPING.nextval from DUAL
    </selectKey>
    insert into dev_people_mapping (id,reader_no,user_no,status)
      values 
      (#{id,jdbcType=INTEGER},#{readerNo,jdbcType=VARCHAR},#{userNo,jdbcType=VARCHAR},#{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.reader.pojo.DevPeopleMapping">
    insert into dev_people_mapping (reader_no,user_no,status)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.readerNo,jdbcType=VARCHAR},#{item.userNo,jdbcType=VARCHAR},#{item.status,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.reader.pojo.DevPeopleMapping" databaseId="Oracle">
     insert into dev_people_mapping (id,reader_no,user_no,status)
       select SEQUENCE_DEV_PEOPLE_MAPPING.nextval,cd.* from(
          <foreach collection="list" item="item" index="index" separator="union all">
             select #{item.readerNo,jdbcType=VARCHAR},#{item.userNo,jdbcType=VARCHAR},#{item.status,jdbcType=VARCHAR} from dual
          </foreach>
       ) cd
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.reader.pojo.DevPeopleMapping">
    insert into dev_people_mapping (id,reader_no,user_no,status)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.readerNo,jdbcType=VARCHAR},#{item.userNo,jdbcType=VARCHAR},#{item.status,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.reader.pojo.DevPeopleMapping" databaseId="SQLServer">
    set IDENTITY_INSERT dev_people_mapping ON 
    insert into dev_people_mapping (id,reader_no,user_no,status)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.readerNo,jdbcType=VARCHAR},#{item.userNo,jdbcType=VARCHAR},#{item.status,jdbcType=VARCHAR})
    </foreach>
    set IDENTITY_INSERT dev_people_mapping OFF 
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.reader.pojo.DevPeopleMapping" databaseId="Oracle">
    insert all 
    <foreach collection="list" item="item" index="index">
      into dev_people_mapping (id,reader_no,user_no,status) values(#{item.id,jdbcType=INTEGER},#{item.readerNo,jdbcType=VARCHAR},#{item.userNo,jdbcType=VARCHAR},#{item.status,jdbcType=VARCHAR})
    </foreach>
    select 1 from dual
  </insert>
  <select id="select" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <include refid="selectSql" /> where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from dev_people_mapping where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBatch" parameterType="java.lang.String">
    delete from dev_people_mapping where id in (${_parameter})
  </delete>
  <delete id="deleteList" parameterType="java.util.List">
    delete from dev_people_mapping where id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
       #{item.id,jdbcType=INTEGER}
    </foreach>
  </delete>
  <update id="update" parameterType="top.iotequ.reader.pojo.DevPeopleMapping">
    update dev_people_mapping set 
      reader_no = #{readerNo,jdbcType=VARCHAR},
      user_no = #{userNo,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateSelective" parameterType="java.util.Map">
    update dev_people_mapping 
      <set>
        <if test='readerNo_string_ == "[null]"'> reader_no = NULL, </if>
        <if test='readerNo != null and readerNo_string_ != "[null]"'> reader_no = #{readerNo,jdbcType=VARCHAR},</if>
        <if test='userNo_string_ == "[null]"'> user_no = NULL, </if>
        <if test='userNo != null and userNo_string_ != "[null]"'> user_no = #{userNo,jdbcType=VARCHAR},</if>
        <if test='status_string_ == "[null]"'> status = NULL, </if>
        <if test='status != null and status_string_ != "[null]"'> status = #{status,jdbcType=VARCHAR},</if>
      </set>
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBy" parameterType="top.iotequ.reader.pojo.DevPeopleMapping">
    update dev_people_mapping set 
      id = #{record.id,jdbcType=INTEGER},
      reader_no = #{record.readerNo,jdbcType=VARCHAR},
      user_no = #{record.userNo,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="list" parameterType="top.iotequ.reader.pojo.DevPeopleMapping" resultMap="BaseResultMap">
    <include refid="selectSql" />
     where 1=1 
        <if test="id != null"> and id = #{id,jdbcType=INTEGER} </if>
        <if test="readerNo != null"> and reader_no like #{readerNo,jdbcType=VARCHAR} </if>
        <if test="userNo != null"> and user_no like #{userNo,jdbcType=VARCHAR} </if>
        <if test="status != null"> and status like #{status,jdbcType=VARCHAR} </if>
  </select>
  <select id="listBy" parameterType="map" resultMap="BaseResultMap">
    <include refid="selectSql" />
        <if test="whereString != null and whereString !=''"> where ${whereString} </if>
        <if test="orderString != null and orderString!=''"> order by ${orderString} </if>
  </select>
  <select id="query" parameterType="map" resultMap="BaseResultMap">
        ${sqlString}
  </select>
</mapper>
