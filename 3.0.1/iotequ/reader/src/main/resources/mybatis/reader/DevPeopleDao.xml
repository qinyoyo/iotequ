<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.iotequ.reader.dao.DevPeopleDao">
  <resultMap id="BaseResultMap" type="top.iotequ.reader.pojo.DevPeople">
    <id column="user_no" jdbcType="VARCHAR" property="userNo" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birth_date" jdbcType="DATE" property="birthDate" />
    <result column="org_code" jdbcType="INTEGER" property="orgCode" />
    <result column="duty_rank" jdbcType="VARCHAR" property="dutyRank" />
    <result column="card_no" jdbcType="VARCHAR" property="cardNo" />
    <result column="id_type" jdbcType="INTEGER" property="idType" />
    <result column="id_number" jdbcType="VARCHAR" property="idNumber" />
    <result column="user_type" jdbcType="INTEGER" property="userType" />
    <result column="mobile_phone" jdbcType="VARCHAR" property="mobilePhone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="register_type" jdbcType="INTEGER" property="registerType" />
    <result column="valid_date" jdbcType="DATE" property="validDate" />
    <result column="expired_date" jdbcType="DATE" property="expiredDate" />
    <result column="reg_time" jdbcType="TIMESTAMP" property="regTime" />
    <result column="dev_password" jdbcType="VARCHAR" property="devPassword" />
    <result column="reg_fingers" jdbcType="INTEGER" property="regFingers" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="id_nation" jdbcType="VARCHAR" property="idNation" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="home_addr" jdbcType="VARCHAR" property="homeAddr" />
  </resultMap>
  <sql id = "selectSql">
     SELECT user_no,real_name,sex,birth_date,org_code,duty_rank,card_no,id_type,id_number,user_type,mobile_phone,email,register_type,valid_date,expired_date,reg_time,dev_password,reg_fingers,note,id_nation,photo,home_addr FROM dev_people
  </sql>
  <insert id="insert" parameterType="top.iotequ.reader.pojo.DevPeople">
    insert into dev_people (user_no,real_name,sex,birth_date,org_code,duty_rank,card_no,id_type,id_number,user_type,mobile_phone,email,register_type,valid_date,expired_date,reg_time,dev_password,reg_fingers,note,id_nation,photo,home_addr)
      values 
      (#{userNo,jdbcType=VARCHAR},#{realName,jdbcType=VARCHAR},#{sex,jdbcType=VARCHAR},#{birthDate,jdbcType=DATE},#{orgCode,jdbcType=INTEGER},#{dutyRank,jdbcType=VARCHAR},#{cardNo,jdbcType=VARCHAR},#{idType,jdbcType=INTEGER},#{idNumber,jdbcType=VARCHAR},#{userType,jdbcType=INTEGER},#{mobilePhone,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},#{registerType,jdbcType=INTEGER},#{validDate,jdbcType=DATE},#{expiredDate,jdbcType=DATE},#{regTime,jdbcType=TIMESTAMP},#{devPassword,jdbcType=VARCHAR},#{regFingers,jdbcType=INTEGER},#{note,jdbcType=VARCHAR},#{idNation,jdbcType=VARCHAR},#{photo,jdbcType=VARCHAR},#{homeAddr,jdbcType=VARCHAR})
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.reader.pojo.DevPeople">
    insert into dev_people (user_no,real_name,sex,birth_date,org_code,duty_rank,card_no,id_type,id_number,user_type,mobile_phone,email,register_type,valid_date,expired_date,reg_time,dev_password,reg_fingers,note,id_nation,photo,home_addr)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.userNo,jdbcType=VARCHAR},#{item.realName,jdbcType=VARCHAR},#{item.sex,jdbcType=VARCHAR},#{item.birthDate,jdbcType=DATE},#{item.orgCode,jdbcType=INTEGER},#{item.dutyRank,jdbcType=VARCHAR},#{item.cardNo,jdbcType=VARCHAR},#{item.idType,jdbcType=INTEGER},#{item.idNumber,jdbcType=VARCHAR},#{item.userType,jdbcType=INTEGER},#{item.mobilePhone,jdbcType=VARCHAR},#{item.email,jdbcType=VARCHAR},#{item.registerType,jdbcType=INTEGER},#{item.validDate,jdbcType=DATE},#{item.expiredDate,jdbcType=DATE},#{item.regTime,jdbcType=TIMESTAMP},#{item.devPassword,jdbcType=VARCHAR},#{item.regFingers,jdbcType=INTEGER},#{item.note,jdbcType=VARCHAR},#{item.idNation,jdbcType=VARCHAR},#{item.photo,jdbcType=VARCHAR},#{item.homeAddr,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.reader.pojo.DevPeople" databaseId="Oracle">
    insert all 
    <foreach collection="list" item="item" index="index">
      into dev_people (user_no,real_name,sex,birth_date,org_code,duty_rank,card_no,id_type,id_number,user_type,mobile_phone,email,register_type,valid_date,expired_date,reg_time,dev_password,reg_fingers,note,id_nation,photo,home_addr) values(#{item.userNo,jdbcType=VARCHAR},#{item.realName,jdbcType=VARCHAR},#{item.sex,jdbcType=VARCHAR},#{item.birthDate,jdbcType=DATE},#{item.orgCode,jdbcType=INTEGER},#{item.dutyRank,jdbcType=VARCHAR},#{item.cardNo,jdbcType=VARCHAR},#{item.idType,jdbcType=INTEGER},#{item.idNumber,jdbcType=VARCHAR},#{item.userType,jdbcType=INTEGER},#{item.mobilePhone,jdbcType=VARCHAR},#{item.email,jdbcType=VARCHAR},#{item.registerType,jdbcType=INTEGER},#{item.validDate,jdbcType=DATE},#{item.expiredDate,jdbcType=DATE},#{item.regTime,jdbcType=TIMESTAMP},#{item.devPassword,jdbcType=VARCHAR},#{item.regFingers,jdbcType=INTEGER},#{item.note,jdbcType=VARCHAR},#{item.idNation,jdbcType=VARCHAR},#{item.photo,jdbcType=VARCHAR},#{item.homeAddr,jdbcType=VARCHAR})
    </foreach>
    select 1 from dual
  </insert>
  <select id="select" parameterType="java.lang.String" resultMap="BaseResultMap">
    <include refid="selectSql" /> where user_no = #{userNo,jdbcType=VARCHAR}
  </select>
  <delete id="delete" parameterType="java.lang.String">
    delete from dev_people where user_no = #{userNo,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteBatch" parameterType="java.lang.String">
    delete from dev_people where user_no in     <foreach item="item" index="index" collection="_parameter.split(',')" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <select id="selectByCardNo" parameterType="java.lang.String" resultMap="BaseResultMap">
    <include refid="selectSql" /> where card_no = #{cardNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByCardNo" parameterType="java.lang.String">
    delete from dev_people where card_no = #{cardNo,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteBatchByCardNo" parameterType="java.lang.String">
    delete from dev_people where card_no in     <foreach item="item" index="index" collection="_parameter.split(',')" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <select id="selectByMobilePhone" parameterType="java.lang.String" resultMap="BaseResultMap">
    <include refid="selectSql" /> where mobile_phone = #{mobilePhone,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByMobilePhone" parameterType="java.lang.String">
    delete from dev_people where mobile_phone = #{mobilePhone,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteBatchByMobilePhone" parameterType="java.lang.String">
    delete from dev_people where mobile_phone in     <foreach item="item" index="index" collection="_parameter.split(',')" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <select id="selectByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
    <include refid="selectSql" /> where email = #{email,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByEmail" parameterType="java.lang.String">
    delete from dev_people where email = #{email,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteBatchByEmail" parameterType="java.lang.String">
    delete from dev_people where email in     <foreach item="item" index="index" collection="_parameter.split(',')" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <select id="selectByIdTypeIdNumber" parameterType="map" resultMap="BaseResultMap">
    <include refid="selectSql" /> where id_type = #{idType} AND id_number = #{idNumber}
  </select>
  <delete id="deleteByIdTypeIdNumber" parameterType="map" >
    delete from dev_people where id_type = #{idType} AND id_number = #{idNumber}
  </delete>
  <delete id="deleteList" parameterType="java.util.List">
    delete from dev_people where user_no in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
       #{item.userNo,jdbcType=VARCHAR}
    </foreach>
  </delete>
  <update id="update" parameterType="top.iotequ.reader.pojo.DevPeople">
    update dev_people set 
      real_name = #{realName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birth_date = #{birthDate,jdbcType=DATE},
      org_code = #{orgCode,jdbcType=INTEGER},
      duty_rank = #{dutyRank,jdbcType=VARCHAR},
      card_no = #{cardNo,jdbcType=VARCHAR},
      id_type = #{idType,jdbcType=INTEGER},
      id_number = #{idNumber,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=INTEGER},
      mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      register_type = #{registerType,jdbcType=INTEGER},
      valid_date = #{validDate,jdbcType=DATE},
      expired_date = #{expiredDate,jdbcType=DATE},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      dev_password = #{devPassword,jdbcType=VARCHAR},
      reg_fingers = #{regFingers,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR},
      id_nation = #{idNation,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      home_addr = #{homeAddr,jdbcType=VARCHAR}
      where user_no = #{userNo,jdbcType=VARCHAR}
  </update>
  <update id="updateSelective" parameterType="top.iotequ.reader.pojo.DevPeople">
    update dev_people 
      <set>
        <if test="realName != null"> real_name = #{realName,jdbcType=VARCHAR},</if>
        <if test="sex != null"> sex = #{sex,jdbcType=VARCHAR},</if>
        <if test="birthDate != null"> birth_date = #{birthDate,jdbcType=DATE},</if>
        <if test="orgCode != null"> org_code = #{orgCode,jdbcType=INTEGER},</if>
        <if test="dutyRank != null"> duty_rank = #{dutyRank,jdbcType=VARCHAR},</if>
        <if test="cardNo != null"> card_no = #{cardNo,jdbcType=VARCHAR},</if>
        <if test="idType != null"> id_type = #{idType,jdbcType=INTEGER},</if>
        <if test="idNumber != null"> id_number = #{idNumber,jdbcType=VARCHAR},</if>
        <if test="userType != null"> user_type = #{userType,jdbcType=INTEGER},</if>
        <if test="mobilePhone != null"> mobile_phone = #{mobilePhone,jdbcType=VARCHAR},</if>
        <if test="email != null"> email = #{email,jdbcType=VARCHAR},</if>
        <if test="registerType != null"> register_type = #{registerType,jdbcType=INTEGER},</if>
        <if test="validDate != null"> valid_date = #{validDate,jdbcType=DATE},</if>
        <if test="expiredDate != null"> expired_date = #{expiredDate,jdbcType=DATE},</if>
        <if test="regTime != null"> reg_time = #{regTime,jdbcType=TIMESTAMP},</if>
        <if test="devPassword != null"> dev_password = #{devPassword,jdbcType=VARCHAR},</if>
        <if test="regFingers != null"> reg_fingers = #{regFingers,jdbcType=INTEGER},</if>
        <if test="note != null"> note = #{note,jdbcType=VARCHAR},</if>
        <if test="idNation != null"> id_nation = #{idNation,jdbcType=VARCHAR},</if>
        <if test="photo != null"> photo = #{photo,jdbcType=VARCHAR},</if>
        <if test="homeAddr != null"> home_addr = #{homeAddr,jdbcType=VARCHAR},</if>
      </set>
      where user_no = #{userNo,jdbcType=VARCHAR}
  </update>
  <update id="updateBy" parameterType="top.iotequ.reader.pojo.DevPeople">
    update dev_people set 
      user_no = #{record.userNo,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      birth_date = #{record.birthDate,jdbcType=DATE},
      org_code = #{record.orgCode,jdbcType=INTEGER},
      duty_rank = #{record.dutyRank,jdbcType=VARCHAR},
      card_no = #{record.cardNo,jdbcType=VARCHAR},
      id_type = #{record.idType,jdbcType=INTEGER},
      id_number = #{record.idNumber,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=INTEGER},
      mobile_phone = #{record.mobilePhone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      register_type = #{record.registerType,jdbcType=INTEGER},
      valid_date = #{record.validDate,jdbcType=DATE},
      expired_date = #{record.expiredDate,jdbcType=DATE},
      reg_time = #{record.regTime,jdbcType=TIMESTAMP},
      dev_password = #{record.devPassword,jdbcType=VARCHAR},
      reg_fingers = #{record.regFingers,jdbcType=INTEGER},
      note = #{record.note,jdbcType=VARCHAR},
      id_nation = #{record.idNation,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR},
      home_addr = #{record.homeAddr,jdbcType=VARCHAR}
      where user_no = #{userNo,jdbcType=VARCHAR}
  </update>
  <select id="list" parameterType="top.iotequ.reader.pojo.DevPeople" resultMap="BaseResultMap">
    <include refid="selectSql" />
     where 1=1 
        <if test="userNo != null"> and user_no like #{userNo,jdbcType=VARCHAR} </if>
        <if test="realName != null"> and real_name like #{realName,jdbcType=VARCHAR} </if>
        <if test="sex != null"> and sex like #{sex,jdbcType=VARCHAR} </if>
        <if test="birthDate != null"> and birth_date like #{birthDate,jdbcType=DATE} </if>
        <if test="orgCode != null"> and org_code = #{orgCode,jdbcType=INTEGER} </if>
        <if test="dutyRank != null"> and duty_rank like #{dutyRank,jdbcType=VARCHAR} </if>
        <if test="cardNo != null"> and card_no like #{cardNo,jdbcType=VARCHAR} </if>
        <if test="idType != null"> and id_type = #{idType,jdbcType=INTEGER} </if>
        <if test="idNumber != null"> and id_number like #{idNumber,jdbcType=VARCHAR} </if>
        <if test="userType != null"> and user_type = #{userType,jdbcType=INTEGER} </if>
        <if test="mobilePhone != null"> and mobile_phone like #{mobilePhone,jdbcType=VARCHAR} </if>
        <if test="email != null"> and email like #{email,jdbcType=VARCHAR} </if>
        <if test="registerType != null"> and register_type = #{registerType,jdbcType=INTEGER} </if>
        <if test="validDate != null"> and valid_date like #{validDate,jdbcType=DATE} </if>
        <if test="expiredDate != null"> and expired_date like #{expiredDate,jdbcType=DATE} </if>
        <if test="regTime != null"> and reg_time like #{regTime,jdbcType=TIMESTAMP} </if>
        <if test="devPassword != null"> and dev_password like #{devPassword,jdbcType=VARCHAR} </if>
        <if test="regFingers != null"> and reg_fingers = #{regFingers,jdbcType=INTEGER} </if>
        <if test="note != null"> and note like #{note,jdbcType=VARCHAR} </if>
        <if test="idNation != null"> and id_nation like #{idNation,jdbcType=VARCHAR} </if>
        <if test="photo != null"> and photo like #{photo,jdbcType=VARCHAR} </if>
        <if test="homeAddr != null"> and home_addr like #{homeAddr,jdbcType=VARCHAR} </if>
  </select>
  <select id="listBy" parameterType="map" resultMap="BaseResultMap">
    <include refid="selectSql" />
        <if test="whereString != null and whereString !=''"> where ${whereString} </if>
        <if test="orderString != null and orderString!=''"> order by ${orderString} </if>
  </select>
  <select id="query" parameterType="map" resultMap="BaseResultMap">
        ${sqlString}
  </select>
</mapper>
