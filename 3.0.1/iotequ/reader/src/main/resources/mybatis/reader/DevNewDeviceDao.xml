<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.iotequ.reader.dao.DevNewDeviceDao">
  <resultMap id="BaseResultMap" type="top.iotequ.reader.pojo.DevNewDevice">
    <id column="reader_no" jdbcType="VARCHAR" property="readerNo" />
    <result column="sn_no" jdbcType="VARCHAR" property="snNo" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
  </resultMap>
  <sql id = "selectSql">
     SELECT reader_no,sn_no,type,ip FROM dev_new_device
  </sql>
  <insert id="insert" parameterType="top.iotequ.reader.pojo.DevNewDevice">
    insert into dev_new_device (reader_no,sn_no,type,ip)
      values 
      (#{readerNo,jdbcType=VARCHAR},#{snNo,jdbcType=VARCHAR},#{type,jdbcType=VARCHAR},#{ip,jdbcType=VARCHAR})
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.reader.pojo.DevNewDevice">
    insert into dev_new_device (reader_no,sn_no,type,ip)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.readerNo,jdbcType=VARCHAR},#{item.snNo,jdbcType=VARCHAR},#{item.type,jdbcType=VARCHAR},#{item.ip,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.reader.pojo.DevNewDevice" databaseId="Oracle">
    insert all 
    <foreach collection="list" item="item" index="index">
      into dev_new_device (reader_no,sn_no,type,ip) values(#{item.readerNo,jdbcType=VARCHAR},#{item.snNo,jdbcType=VARCHAR},#{item.type,jdbcType=VARCHAR},#{item.ip,jdbcType=VARCHAR})
    </foreach>
    select 1 from dual
  </insert>
  <select id="select" parameterType="java.lang.String" resultMap="BaseResultMap">
    <include refid="selectSql" /> where reader_no = #{readerNo,jdbcType=VARCHAR}
  </select>
  <delete id="delete" parameterType="java.lang.String">
    delete from dev_new_device where reader_no = #{readerNo,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteBatch" parameterType="java.lang.String">
    delete from dev_new_device where reader_no in     <foreach item="item" index="index" collection="_parameter.split(',')" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <delete id="deleteList" parameterType="java.util.List">
    delete from dev_new_device where reader_no in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
       #{item.readerNo,jdbcType=VARCHAR}
    </foreach>
  </delete>
  <update id="update" parameterType="top.iotequ.reader.pojo.DevNewDevice">
    update dev_new_device set 
      sn_no = #{snNo,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR}
      where reader_no = #{readerNo,jdbcType=VARCHAR}
  </update>
  <update id="updateSelective" parameterType="java.util.Map">
    update dev_new_device 
      <set>
        <if test='snNo_string_ == "[null]"'> sn_no = NULL, </if>
        <if test='snNo != null and snNo_string_ != "[null]"'> sn_no = #{snNo,jdbcType=VARCHAR},</if>
        <if test='type_string_ == "[null]"'> type = NULL, </if>
        <if test='type != null and type_string_ != "[null]"'> type = #{type,jdbcType=VARCHAR},</if>
        <if test='ip_string_ == "[null]"'> ip = NULL, </if>
        <if test='ip != null and ip_string_ != "[null]"'> ip = #{ip,jdbcType=VARCHAR},</if>
      </set>
      where reader_no = #{readerNo,jdbcType=VARCHAR}
  </update>
  <update id="updateBy" parameterType="top.iotequ.reader.pojo.DevNewDevice">
    update dev_new_device set 
      reader_no = #{record.readerNo,jdbcType=VARCHAR},
      sn_no = #{record.snNo,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR}
      where reader_no = #{readerNo,jdbcType=VARCHAR}
  </update>
  <select id="list" parameterType="top.iotequ.reader.pojo.DevNewDevice" resultMap="BaseResultMap">
    <include refid="selectSql" />
     where 1=1 
        <if test="readerNo != null"> and reader_no like #{readerNo,jdbcType=VARCHAR} </if>
        <if test="snNo != null"> and sn_no like #{snNo,jdbcType=VARCHAR} </if>
        <if test="type != null"> and type like #{type,jdbcType=VARCHAR} </if>
        <if test="ip != null"> and ip like #{ip,jdbcType=VARCHAR} </if>
  </select>
  <select id="listBy" parameterType="map" resultMap="BaseResultMap">
    <include refid="selectSql" />
        <if test="whereString != null and whereString !=''"> where ${whereString} </if>
        <if test="orderString != null and orderString!=''"> order by ${orderString} </if>
  </select>
  <select id="query" parameterType="map" resultMap="BaseResultMap">
        ${sqlString}
  </select>
</mapper>
