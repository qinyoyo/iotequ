<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.iotequ.reader.dao.DevAuthRoleDao">
  <resultMap id="BaseResultMap" type="top.iotequ.reader.pojo.DevAuthRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <sql id = "selectSql">
     SELECT id,name FROM dev_auth_role
  </sql>
  <insert id="insert" parameterType="top.iotequ.reader.pojo.DevAuthRole">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" databaseId="SQLServer">
      SELECT @@IDENTITY
    </selectKey>
    insert into dev_auth_role (name)
      values 
      (#{name,jdbcType=VARCHAR})
  </insert>
  <insert id="insert" parameterType="top.iotequ.reader.pojo.DevAuthRole" databaseId="Oracle">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer" >
      SELECT SEQUENCE_DEV_AUTH_ROLE.nextval from DUAL
    </selectKey>
    insert into dev_auth_role (id,name)
      values 
      (#{id,jdbcType=INTEGER},#{name,jdbcType=VARCHAR})
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.reader.pojo.DevAuthRole">
    insert into dev_auth_role (name)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.name,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.reader.pojo.DevAuthRole" databaseId="Oracle">
     insert into dev_auth_role (id,name)
       select SEQUENCE_DEV_AUTH_ROLE.nextval,cd.* from(
          <foreach collection="list" item="item" index="index" separator="union all">
             select #{item.name,jdbcType=VARCHAR} from dual
          </foreach>
       ) cd
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.reader.pojo.DevAuthRole">
    insert into dev_auth_role (id,name)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.name,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.reader.pojo.DevAuthRole" databaseId="SQLServer">
    set IDENTITY_INSERT dev_auth_role ON 
    insert into dev_auth_role (id,name)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.name,jdbcType=VARCHAR})
    </foreach>
    set IDENTITY_INSERT dev_auth_role OFF 
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.reader.pojo.DevAuthRole" databaseId="Oracle">
    insert all 
    <foreach collection="list" item="item" index="index">
      into dev_auth_role (id,name) values(#{item.id,jdbcType=INTEGER},#{item.name,jdbcType=VARCHAR})
    </foreach>
    select 1 from dual
  </insert>
  <select id="select" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <include refid="selectSql" /> where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from dev_auth_role where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBatch" parameterType="java.lang.String">
    delete from dev_auth_role where id in (${_parameter})
  </delete>
  <delete id="deleteList" parameterType="java.util.List">
    delete from dev_auth_role where id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
       #{item.id,jdbcType=INTEGER}
    </foreach>
  </delete>
  <update id="update" parameterType="top.iotequ.reader.pojo.DevAuthRole">
    update dev_auth_role set 
      name = #{name,jdbcType=VARCHAR}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateSelective" parameterType="java.util.Map">
    update dev_auth_role 
      <set>
        <if test='name_string_ == "[null]"'> name = NULL, </if>
        <if test='name != null and name_string_ != "[null]"'> name = #{name,jdbcType=VARCHAR},</if>
      </set>
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBy" parameterType="top.iotequ.reader.pojo.DevAuthRole">
    update dev_auth_role set 
      id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="list" parameterType="top.iotequ.reader.pojo.DevAuthRole" resultMap="BaseResultMap">
    <include refid="selectSql" />
     where 1=1 
        <if test="id != null"> and id = #{id,jdbcType=INTEGER} </if>
        <if test="name != null"> and name like #{name,jdbcType=VARCHAR} </if>
  </select>
  <select id="listBy" parameterType="map" resultMap="BaseResultMap">
    <include refid="selectSql" />
        <if test="whereString != null and whereString !=''"> where ${whereString} </if>
        <if test="orderString != null and orderString!=''"> order by ${orderString} </if>
  </select>
  <select id="query" parameterType="map" resultMap="BaseResultMap">
        ${sqlString}
  </select>
</mapper>
