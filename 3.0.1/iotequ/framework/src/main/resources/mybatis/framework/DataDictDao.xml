<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.iotequ.framework.dao.DataDictDao">
  <resultMap id="BaseResultMap" type="top.iotequ.framework.pojo.DataDict">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="dict" jdbcType="VARCHAR" property="dict" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="text" jdbcType="VARCHAR" property="text" />
    <result column="order_num" jdbcType="INTEGER" property="orderNum" />
  </resultMap>
  <sql id = "selectSql">
     SELECT id,dict,code,text,order_num FROM sys_data_dict
  </sql>
  <insert id="insert" parameterType="top.iotequ.framework.pojo.DataDict">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer" databaseId="SQLServer">
      SELECT @@IDENTITY
    </selectKey>
    insert into sys_data_dict (dict,code,text,order_num)
      values 
      (#{dict,jdbcType=VARCHAR},#{code,jdbcType=VARCHAR},#{text,jdbcType=VARCHAR},#{orderNum,jdbcType=INTEGER})
  </insert>
  <insert id="insert" parameterType="top.iotequ.framework.pojo.DataDict" databaseId="Oracle">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer" >
      SELECT SEQUENCE_SYS_DATA_DICT.nextval from DUAL
    </selectKey>
    insert into sys_data_dict (id,dict,code,text,order_num)
      values 
      (#{id,jdbcType=INTEGER},#{dict,jdbcType=VARCHAR},#{code,jdbcType=VARCHAR},#{text,jdbcType=VARCHAR},#{orderNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.framework.pojo.DataDict">
    insert into sys_data_dict (dict,code,text,order_num)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.dict,jdbcType=VARCHAR},#{item.code,jdbcType=VARCHAR},#{item.text,jdbcType=VARCHAR},#{item.orderNum,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insertBatchWithoutId" parameterType="top.iotequ.framework.pojo.DataDict" databaseId="Oracle">
     insert into sys_data_dict (id,dict,code,text,order_num)
       select SEQUENCE_SYS_DATA_DICT.nextval,cd.* from(
          <foreach collection="list" item="item" index="index" separator="union all">
             select #{item.dict,jdbcType=VARCHAR},#{item.code,jdbcType=VARCHAR},#{item.text,jdbcType=VARCHAR},#{item.orderNum,jdbcType=INTEGER} from dual
          </foreach>
       ) cd
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.framework.pojo.DataDict">
    insert into sys_data_dict (id,dict,code,text,order_num)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.dict,jdbcType=VARCHAR},#{item.code,jdbcType=VARCHAR},#{item.text,jdbcType=VARCHAR},#{item.orderNum,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.framework.pojo.DataDict" databaseId="SQLServer">
    set IDENTITY_INSERT sys_data_dict ON 
    insert into sys_data_dict (id,dict,code,text,order_num)
      values 
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER},#{item.dict,jdbcType=VARCHAR},#{item.code,jdbcType=VARCHAR},#{item.text,jdbcType=VARCHAR},#{item.orderNum,jdbcType=INTEGER})
    </foreach>
    set IDENTITY_INSERT sys_data_dict OFF 
  </insert>
  <insert id="insertBatchWithId" parameterType="top.iotequ.framework.pojo.DataDict" databaseId="Oracle">
    insert all 
    <foreach collection="list" item="item" index="index">
      into sys_data_dict (id,dict,code,text,order_num) values(#{item.id,jdbcType=INTEGER},#{item.dict,jdbcType=VARCHAR},#{item.code,jdbcType=VARCHAR},#{item.text,jdbcType=VARCHAR},#{item.orderNum,jdbcType=INTEGER})
    </foreach>
    select 1 from dual
  </insert>
  <select id="select" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <include refid="selectSql" /> where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from sys_data_dict where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBatch" parameterType="java.lang.String">
    delete from sys_data_dict where id in (${_parameter})
  </delete>
  <select id="selectByDictCode" parameterType="map" resultMap="BaseResultMap">
    <include refid="selectSql" /> where dict = #{dict} AND code = #{code}
  </select>
  <delete id="deleteByDictCode" parameterType="map" >
    delete from sys_data_dict where dict = #{dict} AND code = #{code}
  </delete>
  <delete id="deleteList" parameterType="java.util.List">
    delete from sys_data_dict where id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
       #{item.id,jdbcType=INTEGER}
    </foreach>
  </delete>
  <update id="update" parameterType="top.iotequ.framework.pojo.DataDict">
    update sys_data_dict set 
      dict = #{dict,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      text = #{text,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=INTEGER}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateSelective" parameterType="top.iotequ.framework.pojo.DataDict">
    update sys_data_dict 
      <set>
        <if test="dict != null"> dict = #{dict,jdbcType=VARCHAR},</if>
        <if test="code != null"> code = #{code,jdbcType=VARCHAR},</if>
        <if test="text != null"> text = #{text,jdbcType=VARCHAR},</if>
        <if test="orderNum != null"> order_num = #{orderNum,jdbcType=INTEGER},</if>
      </set>
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBy" parameterType="top.iotequ.framework.pojo.DataDict">
    update sys_data_dict set 
      id = #{record.id,jdbcType=INTEGER},
      dict = #{record.dict,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      text = #{record.text,jdbcType=VARCHAR},
      order_num = #{record.orderNum,jdbcType=INTEGER}
      where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="list" parameterType="top.iotequ.framework.pojo.DataDict" resultMap="BaseResultMap">
    <include refid="selectSql" />
     where 1=1 
        <if test="id != null"> and id = #{id,jdbcType=INTEGER} </if>
        <if test="dict != null"> and dict like #{dict,jdbcType=VARCHAR} </if>
        <if test="code != null"> and code like #{code,jdbcType=VARCHAR} </if>
        <if test="text != null"> and text like #{text,jdbcType=VARCHAR} </if>
        <if test="orderNum != null"> and order_num = #{orderNum,jdbcType=INTEGER} </if>
  </select>
  <select id="listBy" parameterType="map" resultMap="BaseResultMap">
    <include refid="selectSql" />
        <if test="whereString != null and whereString !=''"> where ${whereString} </if>
        <if test="orderString != null and orderString!=''"> order by ${orderString} </if>
  </select>
  <select id="query" parameterType="map" resultMap="BaseResultMap">
        ${sqlString}
  </select>
</mapper>
